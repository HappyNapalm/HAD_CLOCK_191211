{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"str",
				"str_list"
			]
		]
	},
	"buffers":
	[
		{
			"file": "capt_basic/source/capt_basic.c",
			"settings":
			{
				"buffer_size": 9120,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "capt_basic/drivers/fsl_capt.h",
			"settings":
			{
				"buffer_size": 14007,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "capt_basic/drivers/fsl_swm_connections.h",
			"settings":
			{
				"buffer_size": 12248,
				"line_ending": "Unix"
			}
		},
		{
			"file": "capt_basic/board/pin_mux.c",
			"settings":
			{
				"buffer_size": 25280,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 2 files for \"kCAPT_X0Pin\"\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/source/capt_basic.c:\n   21  #define DEMO_CAPT_IRQ_NUMBER CMP_CAPT_IRQn\n   22  #define DEMO_CAPT_IRQ_HANDLER_FUNC CMP_CAPT_DriverIRQHandler\n   23: #define DEMO_CAPT_ENABLE_PINS kCAPT_X0Pin | kCAPT_X1Pin | kCAPT_X2Pin | kCAPT_X3Pin | kCAPT_X4Pin\n   24  #define DEMO_CAPT_FILTER_NUM 10U\n   25  /*******************************************************************************\n\n1 match in 1 file\n\n\nSearching 57 files for \"kCAPT_X0Pin\"\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_capt.h:\n   32  enum _capt_xpins\n   33  {\n   34:     kCAPT_X0Pin  = 1U << 0U,  /*!< CAPT_X0 pin. */\n   35      kCAPT_X1Pin  = 1U << 1U,  /*!< CAPT_X1 pin. */\n   36      kCAPT_X2Pin  = 1U << 2U,  /*!< CAPT_X2 pin. */\n   ..\n  179                            The available range is 0-255. */\n  180      uint16_t enableXpins; /*!< Selects which of the available X pins are enabled. Please refer to '_capt_xpins'.\n  181:                                For example, if want to enable X0, X2 and X3 pins, you can set \"enableXpins = kCAPT_X0Pin\n  182                               | kCAPT_X2Pin\n  183                                 | kCAPT_X3Pin\". */\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/source/capt_basic.c:\n   21  #define DEMO_CAPT_IRQ_NUMBER CMP_CAPT_IRQn\n   22  #define DEMO_CAPT_IRQ_HANDLER_FUNC CMP_CAPT_DriverIRQHandler\n   23: #define DEMO_CAPT_ENABLE_PINS kCAPT_X0Pin | kCAPT_X1Pin | kCAPT_X2Pin | kCAPT_X3Pin | kCAPT_X4Pin\n   24  #define DEMO_CAPT_FILTER_NUM 10U\n   25  /*******************************************************************************\n\n3 matches across 2 files\n\n\nSearching 57 files for \"BOARD_InitPins\"\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/board/pin_mux.c:\n   37  void BOARD_InitBootPins(void)\n   38  {\n   39:     BOARD_InitPins();\n   40  }\n   41  \n   ..\n   43  /*\n   44   * TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************\n   45: BOARD_InitPins:\n   46  - options: {callFromInitBoot: 'true', coreID: core0, enableClock: 'true'}\n   47  - pin_list:\n   ..\n   67  /* FUNCTION ************************************************************************************************************\n   68   *\n   69:  * Function Name : BOARD_InitPins\n   70   * Description   : Configures pin routing and optionally pin electrical features.\n   71   *\n   72   * END ****************************************************************************************************************/\n   73  /* Function assigned for the Cortex-M0P */\n   74: void BOARD_InitPins(void)\n   75  {\n   76      /* Enables clock for IOCON.: enable */\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/board/pin_mux.h:\n   55   *\n   56   */\n   57: void BOARD_InitPins(void); /* Function assigned for the Cortex-M0P */\n   58  \n   59  #if defined(__cplusplus)\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/source/capt_basic.c:\n  169      POWER_DisablePD(kPDRUNCFG_PD_ACMP);\n  170  \n  171:     BOARD_InitPins();\n  172      BOARD_InitBootClocks();\n  173      BOARD_InitDebugConsole();\n\n6 matches across 3 files\n\n\nSearching 57 files for \"kSWM_CAPT_X0\"\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/board/pin_mux.c:\n  220  \n  221      /* CAPT_X0 connect to P0_12 */\n  222:     SWM_SetMovablePinSelect(SWM0, kSWM_CAPT_X0, kSWM_PortPin_P0_12);\n  223  \n  224      /* CAPT_X1 connect to P0_21 */\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_swm_connections.h:\n  191      kSWM_I2C1_SCL = 30U,     /*!< Movable function as I2C1_SCL. */\n  192      kSWM_PLU_CLKIN_IN = 31U, /*!< Movable function as PLU_CLKIN_IN. */\n  193:     kSWM_CAPT_X0 = 32U,      /*!< Movable function as CAPT_X0. */\n  194      kSWM_CAPT_X1 = 33U,      /*!< Movable function as CAPT_X1. */\n  195      kSWM_CAPT_X2 = 34U,      /*!< Movable function as CAPT_X2. */\n\n2 matches across 2 files\n\n\nSearching 57 files for \"SWM_SetMovablePinSelect\"\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/board/pin_mux.c:\n  214  \n  215      /* USART0_TXD connect to P0_4 */\n  216:     SWM_SetMovablePinSelect(SWM0, kSWM_USART0_TXD, kSWM_PortPin_P0_4);\n  217  \n  218      /* USART0_RXD connect to P0_0 */\n  219:     SWM_SetMovablePinSelect(SWM0, kSWM_USART0_RXD, kSWM_PortPin_P0_0);\n  220  \n  221      /* CAPT_X0 connect to P0_12 */\n  222:     SWM_SetMovablePinSelect(SWM0, kSWM_CAPT_X0, kSWM_PortPin_P0_12);\n  223  \n  224      /* CAPT_X1 connect to P0_21 */\n  225:     SWM_SetMovablePinSelect(SWM0, kSWM_CAPT_X1, kSWM_PortPin_P0_21);\n  226  \n  227      /* CAPT_X2 connect to P0_13 */\n  228:     SWM_SetMovablePinSelect(SWM0, kSWM_CAPT_X2, kSWM_PortPin_P0_13);\n  229  \n  230      /* CAPT_X3 connect to P0_11 */\n  231:     SWM_SetMovablePinSelect(SWM0, kSWM_CAPT_X3, kSWM_PortPin_P0_11);\n  232  \n  233      /* CAPT_X4 connect to P0_19 */\n  234:     SWM_SetMovablePinSelect(SWM0, kSWM_CAPT_X4, kSWM_PortPin_P0_19);\n  235  \n  236      /* CAPT_YL connect to P0_7 */\n  237:     SWM_SetMovablePinSelect(SWM0, kSWM_CAPT_YL, kSWM_PortPin_P0_7);\n  238  \n  239      /* CAPT_YH connect to P0_17 */\n  240:     SWM_SetMovablePinSelect(SWM0, kSWM_CAPT_YH, kSWM_PortPin_P0_17);\n  241  \n  242      /* Disable clock for switch matrix. */\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_swm.c:\n   36   * param swm_port_pin any pin which has a GPIO port number and bit number.\n   37   */\n   38: void SWM_SetMovablePinSelect(SWM_Type *base, swm_select_movable_t func, swm_port_pin_type_t swm_port_pin)\n   39  {\n   40      /* Check arguments */\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_swm.h:\n   45   * @param swm_port_pin any pin which has a GPIO port number and bit number.\n   46   */\n   47: void SWM_SetMovablePinSelect(SWM_Type *base, swm_select_movable_t func, swm_port_pin_type_t swm_port_pin);\n   48  \n   49  #if (defined(FSL_FEATURE_SWM_HAS_PINASSIGNFIXED0_REGISTER) && (FSL_FEATURE_SWM_HAS_PINASSIGNFIXED0_REGISTER == 1))\n\n11 matches across 3 files\n\n\nSearching 57 files for \"kSWM_PortPin_P0_12\"\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/board/pin_mux.c:\n  220  \n  221      /* CAPT_X0 connect to P0_12 */\n  222:     SWM_SetMovablePinSelect(SWM0, kSWM_CAPT_X0, kSWM_PortPin_P0_12);\n  223  \n  224      /* CAPT_X1 connect to P0_21 */\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_swm_connections.h:\n  105      kSWM_PortPin_P0_10 = 10U, /*!< port_pin number P0_10. */\n  106      kSWM_PortPin_P0_11 = 11U, /*!< port_pin number P0_11. */\n  107:     kSWM_PortPin_P0_12 = 12U, /*!< port_pin number P0_12. */\n  108      kSWM_PortPin_P0_13 = 13U, /*!< port_pin number P0_13. */\n  109      kSWM_PortPin_P0_14 = 14U, /*!< port_pin number P0_14. */\n\n2 matches across 2 files\n\n\nSearching 57 files for \"IOCON_INDEX_PIO0_17\"\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/board/pin_mux.c:\n   79      CLOCK_EnableClock(kCLOCK_Swm);\n   80      /* This is the point that you need to play with. Use the definitions below to reassign the for the demo board *//\n   81:     const uint32_t IOCON_INDEX_PIO0_17_config = (/* No addition pin function */\n   82                                                   IOCON_PIO_MODE_INACT |\n   83                                                   /* Enable hysteresis */\n   ..\n   88                                                   IOCON_PIO_OD_DI);\n   89      /* PORT0 PIN (coords: ) is configured as  */\n   90:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_17, IOCON_INDEX_PIO0_17_config);\n   91  \n   92      const uint32_t IOCON_INDEX_PIO0_13_config = (/* No addition pin function */\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/device/LPC804.h:\n 2476  #define IOCON_BASE_PTRS                          { IOCON }\n 2477  \n 2478: #define    IOCON_INDEX_PIO0_17       ( 0)\n 2479  #define    IOCON_INDEX_PIO0_13       ( 1)\n 2480  #define    IOCON_INDEX_PIO0_12       ( 2)\n\n4 matches across 2 files\n\n\nSearching 57 files for \"IOCON_PinMuxSet\"\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/board/pin_mux.c:\n   88                                                   IOCON_PIO_OD_DI);\n   89      /* PORT0 PIN (coords: ) is configured as  */\n   90:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_17, IOCON_INDEX_PIO0_17_config);\n   91  \n   92      const uint32_t IOCON_INDEX_PIO0_13_config = (/* No addition pin function */\n   ..\n   99                                                   IOCON_PIO_OD_DI);\n  100      /* PORT1 PIN (coords: ) is configured as  */\n  101:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_13, IOCON_INDEX_PIO0_13_config);\n  102  \n  103      const uint32_t IOCON_INDEX_PIO0_15_config = (/* No addition pin function */\n  ...\n  110                                                   IOCON_PIO_OD_DI);\n  111      /* PORT1 PIN0 (coords: ) is configured as  */\n  112:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_15, IOCON_INDEX_PIO0_15_config);\n  113  \n  114      const uint32_t IOCON_INDEX_PIO0_21_config = (/* No addition pin function */\n  ...\n  121                                                   IOCON_PIO_OD_DI);\n  122      /* PORT1 PIN2 (coords: ) is configured as  */\n  123:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_21, IOCON_INDEX_PIO0_21_config);\n  124  \n  125      const uint32_t IOCON_INDEX_PIO0_9_config = (/* No addition pin function */\n  ...\n  132                                                  IOCON_PIO_OD_DI);\n  133      /* PORT1 PIN3 (coords: ) is configured as  */\n  134:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_9, IOCON_INDEX_PIO0_9_config);\n  135  \n  136      const uint32_t IOCON_INDEX_PIO0_8_config = (/* No addition pin function */\n  ...\n  143                                                  IOCON_PIO_OD_DI);\n  144      /* PORT1 PIN4 (coords: ) is configured as  */\n  145:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_8, IOCON_INDEX_PIO0_8_config);\n  146  \n  147      const uint32_t IOCON_INDEX_PIO0_7_config = (/* No addition pin function */\n  ...\n  154                                                  IOCON_PIO_OD_DI);\n  155      /* PORT1 PIN5 (coords: ) is configured as  */\n  156:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_7, IOCON_INDEX_PIO0_7_config);\n  157  \n  158      const uint32_t IOCON_INDEX_PIO0_12_config = (/* No addition pin function */\n  ...\n  165                                                   IOCON_PIO_OD_DI);\n  166      /* PORT2 PIN (coords: ) is configured as  */\n  167:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_12, IOCON_INDEX_PIO0_12_config);\n  168  \n  169      const uint32_t IOCON_INDEX_PIO0_20_config = (/* No addition pin function */\n  ...\n  176                                                   IOCON_PIO_OD_DI);\n  177      /* PORT2 PIN2 (coords: ) is configured as  */\n  178:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_20, IOCON_INDEX_PIO0_20_config);\n  179  \n  180      const uint32_t IOCON_INDEX_PIO0_19_config = (/* No addition pin function */\n  ...\n  189                                                   IOCON_PIO_DACMODE_DI);\n  190      /* PORT2 PIN4 (coords: ) is configured as  */\n  191:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_19, IOCON_INDEX_PIO0_19_config);\n  192  \n  193      const uint32_t IOCON_INDEX_PIO0_18_config = (/* No addition pin function */\n  ...\n  200                                                   IOCON_PIO_OD_DI);\n  201      /* PORT2 PIN9 (coords: ) is configured as  */\n  202:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_18, IOCON_INDEX_PIO0_18_config);\n  203  \n  204      const uint32_t IOCON_INDEX_PIO0_11_config = (/* No addition pin function */\n  ...\n  211                                                   IOCON_PIO_OD_DI);\n  212      /* PORT7 PIN (coords: ) is configured as  */\n  213:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_11, IOCON_INDEX_PIO0_11_config);\n  214  \n  215      /* USART0_TXD connect to P0_4 */\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_iocon.h:\n  100   * @return  Nothing\n  101   */\n  102: __STATIC_INLINE void IOCON_PinMuxSet(IOCON_Type *base, uint8_t ionumber, uint32_t modefunc)\n  103  {\n  104      base->PIO[ionumber] = modefunc;\n  ...\n  118      for (i = 0; i < arrayLength; i++)\n  119      {\n  120:         IOCON_PinMuxSet(base, pinArray[i].ionumber, pinArray[i].modefunc);\n  121      }\n  122  }\n\n14 matches across 2 files\n\n\nSearching 57 files for \"PIO\"\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/.cproject:\n  547  \t\t<sdkExample>lpcxpresso804_capt_basic</sdkExample>\n  548  \t\t<sdkVersion>2.6.0</sdkVersion>\n  549: \t\t<sdkComponents>platform.drivers.capt.LPC804;device.LPC804_CMSIS.LPC804;platform.Include_common.LPC804;platform.Include_core_cm0plus.LPC804;platform.drivers.clock.LPC804;platform.drivers.common.LPC804;platform.drivers.power_no_lib.LPC804;platform.drivers.reset.LPC804;platform.drivers.rom_api.LPC804;platform.drivers.lpc_gpio.LPC804;component.miniusart_adapter.LPC804;platform.drivers.lpc_miniusart.LPC804;device.LPC804_startup.LPC804;platform.utilities.assert_lite.LPC804;utility.debug_console_lite.LPC804;platform.drivers.lpc_iocon_lite.LPC804;platform.drivers.swm.LPC804;platform.drivers.swm_connections.LPC804;platform.drivers.syscon.LPC804;platform.drivers.syscon_connections.LPC804;lpcxpresso804_capt_basic;</sdkComponents>\n  550  \t\t<boardId>lpcxpresso804</boardId>\n  551  \t\t<package>LPC804M101JDH24</package>\n  ...\n  587  &lt;peripheralInstance derived_from=\"USART0\" determined=\"infoFile\" id=\"USART1\" location=\"0x40068000\"/&gt;\n  588  &lt;peripheralInstance derived_from=\"CRC\" determined=\"infoFile\" id=\"CRC\" location=\"0x50000000\"/&gt;\n  589: &lt;peripheralInstance derived_from=\"GPIO\" determined=\"infoFile\" id=\"GPIO\" location=\"0xA0000000\"/&gt;\n  590  &lt;peripheralInstance derived_from=\"PINT\" determined=\"infoFile\" id=\"PINT\" location=\"0xA0004000\"/&gt;\n  591  &lt;/chip&gt;\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/board/board.h:\n   11  #include \"clock_config.h\"\n   12  #include \"fsl_common.h\"\n   13: #include \"fsl_gpio.h\"\n   14  \n   15  /*******************************************************************************\n   ..\n   40  \n   41  /* LED_GREEN */\n   42: #ifndef BOARD_LED_GREEN_GPIO\n   43: #define BOARD_LED_GREEN_GPIO GPIO\n   44  #endif\n   45: #define BOARD_LED_GREEN_GPIO_PORT 0U\n   46: #ifndef BOARD_LED_GREEN_GPIO_PIN\n   47: #define BOARD_LED_GREEN_GPIO_PIN 12U\n   48  #endif\n   49  \n   50  #define LED_GREEN_INIT(output)                                                              \\\n   51:     GPIO_PortInit(BOARD_LED_GREEN_GPIO, BOARD_LED_GREEN_GPIO_PORT);                         \\\n   52:     GPIO_PinInit(BOARD_LED_GREEN_GPIO, BOARD_LED_GREEN_GPIO_PORT, BOARD_LED_GREEN_GPIO_PIN, \\\n   53:                  &(gpio_pin_config_t){kGPIO_DigitalOutput, (output)}); /*!< Enable target LED_GREEN */\n   54  #define LED_GREEN_ON()                                                                       \\\n   55:     GPIO_PortClear(BOARD_LED_GREEN_GPIO, BOARD_LED_GREEN_GPIO_PORT,                          \\\n   56:                    1U << BOARD_LED_GREEN_GPIO_PIN) /*!< Turn on target LED_GREEN \\ \\ \\ \\ \\ \\ \\\n   57                                                      */\n   58  #define LED_GREEN_OFF()                                                                     \\\n   59:     GPIO_PortSet(BOARD_LED_GREEN_GPIO, BOARD_LED_GREEN_GPIO_PORT,                           \\\n   60:                  1U << BOARD_LED_GREEN_GPIO_PIN) /*!< Turn off target LED_GREEN \\ \\ \\ \\ \\ \\ \\\n   61                                                    */\n   62  #define LED_GREEN_TOGGLE()                                           \\\n   63:     GPIO_PortToggle(BOARD_LED_GREEN_GPIO, BOARD_LED_GREEN_GPIO_PORT, \\\n   64:                     1U << BOARD_LED_GREEN_GPIO_PIN) /*!< Toggle on target LED_GREEN */\n   65  \n   66  /* LED_BLUE */\n   67: #ifndef BOARD_LED_BLUE_GPIO\n   68: #define BOARD_LED_BLUE_GPIO GPIO\n   69  #endif\n   70: #define BOARD_LED_BLUE_GPIO_PORT 0U\n   71: #ifndef BOARD_LED_BLUE_GPIO_PIN\n   72: #define BOARD_LED_BLUE_GPIO_PIN 11U\n   73  #endif\n   74  \n   75: #ifndef BOARD_S1_GPIO\n   76: #define BOARD_S1_GPIO GPIO\n   77  #endif\n   78: #define BOARD_S1_GPIO_PORT 0U\n   79: #ifndef BOARD_S1_GPIO_PIN\n   80: #define BOARD_S1_GPIO_PIN 13U\n   81  #endif\n   82  #define BOARD_S1_NAME \"S1\"\n   ..\n   85  \n   86  #define LED_BLUE_INIT(output)                                                            \\\n   87:     GPIO_PortInit(BOARD_LED_BLUE_GPIO, BOARD_LED_BLUE_GPIO_PORT);                        \\\n   88:     GPIO_PinInit(BOARD_LED_BLUE_GPIO, BOARD_LED_BLUE_GPIO_PORT, BOARD_LED_BLUE_GPIO_PIN, \\\n   89:                  &(gpio_pin_config_t){kGPIO_DigitalOutput, (output)}); /*!< Enable target LED_GREEN */\n   90  #define LED_BLUE_ON()                                                                      \\\n   91:     GPIO_PortClear(BOARD_LED_BLUE_GPIO, BOARD_LED_BLUE_GPIO_PORT,                          \\\n   92:                    1U << BOARD_LED_BLUE_GPIO_PIN) /*!< Turn on target LED_BLUE \\ \\ \\ \\ \\ \\ \\\n   93                                                     */\n   94  #define LED_BLUE_OFF()                                                                    \\\n   95:     GPIO_PortSet(BOARD_LED_BLUE_GPIO, BOARD_LED_BLUE_GPIO_PORT,                           \\\n   96:                  1U << BOARD_LED_BLUE_GPIO_PIN) /*!< Turn off target LED_BLUE \\ \\ \\ \\ \\ \\ \\\n   97                                                   */\n   98  #define LED_BLUE_TOGGLE()                                          \\\n   99:     GPIO_PortToggle(BOARD_LED_BLUE_GPIO, BOARD_LED_BLUE_GPIO_PORT, \\\n  100:                     1U << BOARD_LED_BLUE_GPIO_PIN) /*!< Toggle on target LED_BLUE */\n  101  \n  102  /* LED_RED */\n  103: #ifndef BOARD_LED_RED_GPIO\n  104: #define BOARD_LED_RED_GPIO GPIO\n  105  #endif\n  106: #define BOARD_LED_RED_GPIO_PORT 0U\n  107: #ifndef BOARD_LED_RED_GPIO_PIN\n  108: #define BOARD_LED_RED_GPIO_PIN 13U\n  109  #endif\n  110  \n  111  #define LED_RED_INIT(output)                                                          \\\n  112:     GPIO_PortInit(BOARD_LED_RED_GPIO, BOARD_LED_RED_GPIO_PORT);                       \\\n  113:     GPIO_PinInit(BOARD_LED_RED_GPIO, BOARD_LED_RED_GPIO_PORT, BOARD_LED_RED_GPIO_PIN, \\\n  114:                  &(gpio_pin_config_t){kGPIO_DigitalOutput, (output)}); /*!< Enable target LED_GREEN */\n  115  #define LED_RED_ON()                                                                     \\\n  116:     GPIO_PortClear(BOARD_LED_RED_GPIO, BOARD_LED_RED_GPIO_PORT,                          \\\n  117:                    1U << BOARD_LED_RED_GPIO_PIN) /*!< Turn on target LED_RED \\ \\ \\ \\ \\ \\ \\\n  118                                                    */\n  119  #define LED_RED_OFF()                                                                   \\\n  120:     GPIO_PortSet(BOARD_LED_RED_GPIO, BOARD_LED_RED_GPIO_PORT,                           \\\n  121:                  1U << BOARD_LED_RED_GPIO_PIN) /*!< Turn off target LED_RED \\ \\ \\ \\ \\ \\ \\\n  122                                                  */\n  123  #define LED_RED_TOGGLE()                                         \\\n  124:     GPIO_PortToggle(BOARD_LED_RED_GPIO, BOARD_LED_RED_GPIO_PORT, \\\n  125:                     1U << BOARD_LED_RED_GPIO_PIN) /*!< Toggle on target LED_RED */\n  126  \n  127: #ifndef BOARD_SW1_GPIO\n  128: #define BOARD_SW1_GPIO GPIO\n  129  #endif\n  130: #define BOARD_SW1_GPIO_PORT 0U\n  131: #ifndef BOARD_SW1_GPIO_PIN\n  132: #define BOARD_SW1_GPIO_PIN 13U\n  133  #endif\n  134  #define BOARD_SW1_NAME \"SW1\"\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/board/pin_mux.c:\n   46  - options: {callFromInitBoot: 'true', coreID: core0, enableClock: 'true'}\n   47  - pin_list:\n   48:   - {pin_num: '22', peripheral: USART0, signal: RXD, pin_signal: PIO0_0/ACMP_I1}\n   49:   - {pin_num: '7', peripheral: USART0, signal: TXD, pin_signal: PIO0_4/ADC_11}\n   50:   - {pin_num: '5', peripheral: CAPT, signal: 'CAPTX, 0', pin_signal: PIO0_12, mode: inactive, invert: disabled, hysteresis: enabled, opendrain: disabled}\n   51:   - {pin_num: '12', peripheral: CAPT, signal: 'CAPTX, 1', pin_signal: PIO0_21/ACMP_I5, mode: inactive, invert: disabled, hysteresis: enabled, opendrain: disabled}\n   52:   - {pin_num: '4', peripheral: CAPT, signal: 'CAPTX, 2', pin_signal: PIO0_13/ADC_10, mode: inactive, invert: disabled, hysteresis: enabled, opendrain: disabled}\n   53:   - {pin_num: '10', peripheral: CAPT, signal: 'CAPTX, 3', pin_signal: PIO0_11/ADC_6/WKTCLKIN, mode: inactive, invert: disabled, hysteresis: enabled, opendrain: disabled}\n   54:   - {pin_num: '24', peripheral: CAPT, signal: 'CAPTX, 4', pin_signal: PIO0_19/DACOUT, mode: inactive, invert: disabled, hysteresis: enabled, opendrain: disabled,\n   55      dacmode: disabled}\n   56:   - {pin_num: '3', peripheral: CAPT, signal: CAPTYH, pin_signal: PIO0_17/ADC_9, mode: inactive, invert: disabled, hysteresis: enabled, opendrain: disabled}\n   57:   - {pin_num: '20', peripheral: CAPT, signal: CAPTYL, pin_signal: PIO0_7/ADC_1/ACMPVREF, mode: inactive, invert: disabled, hysteresis: enabled, opendrain: disabled}\n   58:   - {pin_num: '13', peripheral: GPIO, signal: 'PIO0, 20', pin_signal: PIO0_20, mode: inactive, invert: disabled, hysteresis: enabled, opendrain: disabled}\n   59:   - {pin_num: '1', peripheral: GPIO, signal: 'PIO0, 18', pin_signal: PIO0_18, mode: inactive, invert: disabled, hysteresis: enabled, opendrain: disabled}\n   60:   - {pin_num: '14', peripheral: GPIO, signal: 'PIO0, 15', pin_signal: PIO0_15/ADC_8, mode: inactive, invert: disabled, hysteresis: enabled, opendrain: disabled}\n   61:   - {pin_num: '17', peripheral: GPIO, signal: 'PIO0, 8', pin_signal: PIO0_8/ADC_5, mode: inactive, invert: disabled, hysteresis: enabled, opendrain: disabled}\n   62:   - {pin_num: '16', peripheral: GPIO, signal: 'PIO0, 9', pin_signal: PIO0_9/ADC_4, mode: inactive, invert: disabled, hysteresis: enabled, opendrain: disabled}\n   63   * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS ***********\n   64   */\n   ..\n   79      CLOCK_EnableClock(kCLOCK_Swm);\n   80      /* This is the point that you need to play with. Use the definitions below to reassign the for the demo board *//\n   81:     const uint32_t IOCON_INDEX_PIO0_17_config = (/* No addition pin function */\n   82:                                                  IOCON_PIO_MODE_INACT |\n   83                                                   /* Enable hysteresis */\n   84:                                                  IOCON_PIO_HYS_EN |\n   85                                                   /* Input not invert */\n   86:                                                  IOCON_PIO_INV_DI |\n   87                                                   /* Disables Open-drain function */\n   88:                                                  IOCON_PIO_OD_DI);\n   89      /* PORT0 PIN (coords: ) is configured as  */\n   90:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_17, IOCON_INDEX_PIO0_17_config);\n   91  \n   92:     const uint32_t IOCON_INDEX_PIO0_13_config = (/* No addition pin function */\n   93:                                                  IOCON_PIO_MODE_INACT |\n   94                                                   /* Enable hysteresis */\n   95:                                                  IOCON_PIO_HYS_EN |\n   96                                                   /* Input not invert */\n   97:                                                  IOCON_PIO_INV_DI |\n   98                                                   /* Disables Open-drain function */\n   99:                                                  IOCON_PIO_OD_DI);\n  100      /* PORT1 PIN (coords: ) is configured as  */\n  101:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_13, IOCON_INDEX_PIO0_13_config);\n  102  \n  103:     const uint32_t IOCON_INDEX_PIO0_15_config = (/* No addition pin function */\n  104:                                                  IOCON_PIO_MODE_INACT |\n  105                                                   /* Enable hysteresis */\n  106:                                                  IOCON_PIO_HYS_EN |\n  107                                                   /* Input not invert */\n  108:                                                  IOCON_PIO_INV_DI |\n  109                                                   /* Disables Open-drain function */\n  110:                                                  IOCON_PIO_OD_DI);\n  111      /* PORT1 PIN0 (coords: ) is configured as  */\n  112:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_15, IOCON_INDEX_PIO0_15_config);\n  113  \n  114:     const uint32_t IOCON_INDEX_PIO0_21_config = (/* No addition pin function */\n  115:                                                  IOCON_PIO_MODE_INACT |\n  116                                                   /* Enable hysteresis */\n  117:                                                  IOCON_PIO_HYS_EN |\n  118                                                   /* Input not invert */\n  119:                                                  IOCON_PIO_INV_DI |\n  120                                                   /* Disables Open-drain function */\n  121:                                                  IOCON_PIO_OD_DI);\n  122      /* PORT1 PIN2 (coords: ) is configured as  */\n  123:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_21, IOCON_INDEX_PIO0_21_config);\n  124  \n  125:     const uint32_t IOCON_INDEX_PIO0_9_config = (/* No addition pin function */\n  126:                                                 IOCON_PIO_MODE_INACT |\n  127                                                  /* Enable hysteresis */\n  128:                                                 IOCON_PIO_HYS_EN |\n  129                                                  /* Input not invert */\n  130:                                                 IOCON_PIO_INV_DI |\n  131                                                  /* Disables Open-drain function */\n  132:                                                 IOCON_PIO_OD_DI);\n  133      /* PORT1 PIN3 (coords: ) is configured as  */\n  134:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_9, IOCON_INDEX_PIO0_9_config);\n  135  \n  136:     const uint32_t IOCON_INDEX_PIO0_8_config = (/* No addition pin function */\n  137:                                                 IOCON_PIO_MODE_INACT |\n  138                                                  /* Enable hysteresis */\n  139:                                                 IOCON_PIO_HYS_EN |\n  140                                                  /* Input not invert */\n  141:                                                 IOCON_PIO_INV_DI |\n  142                                                  /* Disables Open-drain function */\n  143:                                                 IOCON_PIO_OD_DI);\n  144      /* PORT1 PIN4 (coords: ) is configured as  */\n  145:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_8, IOCON_INDEX_PIO0_8_config);\n  146  \n  147:     const uint32_t IOCON_INDEX_PIO0_7_config = (/* No addition pin function */\n  148:                                                 IOCON_PIO_MODE_INACT |\n  149                                                  /* Enable hysteresis */\n  150:                                                 IOCON_PIO_HYS_EN |\n  151                                                  /* Input not invert */\n  152:                                                 IOCON_PIO_INV_DI |\n  153                                                  /* Disables Open-drain function */\n  154:                                                 IOCON_PIO_OD_DI);\n  155      /* PORT1 PIN5 (coords: ) is configured as  */\n  156:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_7, IOCON_INDEX_PIO0_7_config);\n  157  \n  158:     const uint32_t IOCON_INDEX_PIO0_12_config = (/* No addition pin function */\n  159:                                                  IOCON_PIO_MODE_INACT |\n  160                                                   /* Enable hysteresis */\n  161:                                                  IOCON_PIO_HYS_EN |\n  162                                                   /* Input not invert */\n  163:                                                  IOCON_PIO_INV_DI |\n  164                                                   /* Disables Open-drain function */\n  165:                                                  IOCON_PIO_OD_DI);\n  166      /* PORT2 PIN (coords: ) is configured as  */\n  167:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_12, IOCON_INDEX_PIO0_12_config);\n  168  \n  169:     const uint32_t IOCON_INDEX_PIO0_20_config = (/* No addition pin function */\n  170:                                                  IOCON_PIO_MODE_INACT |\n  171                                                   /* Enable hysteresis */\n  172:                                                  IOCON_PIO_HYS_EN |\n  173                                                   /* Input not invert */\n  174:                                                  IOCON_PIO_INV_DI |\n  175                                                   /* Disables Open-drain function */\n  176:                                                  IOCON_PIO_OD_DI);\n  177      /* PORT2 PIN2 (coords: ) is configured as  */\n  178:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_20, IOCON_INDEX_PIO0_20_config);\n  179  \n  180:     const uint32_t IOCON_INDEX_PIO0_19_config = (/* No addition pin function */\n  181:                                                  IOCON_PIO_MODE_INACT |\n  182                                                   /* Enable hysteresis */\n  183:                                                  IOCON_PIO_HYS_EN |\n  184                                                   /* Input not invert */\n  185:                                                  IOCON_PIO_INV_DI |\n  186                                                   /* Disables Open-drain function */\n  187:                                                  IOCON_PIO_OD_DI |\n  188                                                   /* Disables DAC mode */\n  189:                                                  IOCON_PIO_DACMODE_DI);\n  190      /* PORT2 PIN4 (coords: ) is configured as  */\n  191:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_19, IOCON_INDEX_PIO0_19_config);\n  192  \n  193:     const uint32_t IOCON_INDEX_PIO0_18_config = (/* No addition pin function */\n  194:                                                  IOCON_PIO_MODE_INACT |\n  195                                                   /* Enable hysteresis */\n  196:                                                  IOCON_PIO_HYS_EN |\n  197                                                   /* Input not invert */\n  198:                                                  IOCON_PIO_INV_DI |\n  199                                                   /* Disables Open-drain function */\n  200:                                                  IOCON_PIO_OD_DI);\n  201      /* PORT2 PIN9 (coords: ) is configured as  */\n  202:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_18, IOCON_INDEX_PIO0_18_config);\n  203  \n  204:     const uint32_t IOCON_INDEX_PIO0_11_config = (/* No addition pin function */\n  205:                                                  IOCON_PIO_MODE_INACT |\n  206                                                   /* Enable hysteresis */\n  207:                                                  IOCON_PIO_HYS_EN |\n  208                                                   /* Input not invert */\n  209:                                                  IOCON_PIO_INV_DI |\n  210                                                   /* Disables Open-drain function */\n  211:                                                  IOCON_PIO_OD_DI);\n  212      /* PORT7 PIN (coords: ) is configured as  */\n  213:     IOCON_PinMuxSet(IOCON, IOCON_INDEX_PIO0_11, IOCON_INDEX_PIO0_11_config);\n  214  \n  215      /* USART0_TXD connect to P0_4 */\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/board/pin_mux.h:\n   45  void BOARD_InitBootPins(void);\n   46  \n   47: #define IOCON_PIO_DACMODE_DI 0x00u /*!<@brief Disables DAC mode */\n   48: #define IOCON_PIO_HYS_EN 0x20u     /*!<@brief Enable hysteresis */\n   49: #define IOCON_PIO_INV_DI 0x00u     /*!<@brief Input not invert */\n   50: #define IOCON_PIO_MODE_INACT 0x00u /*!<@brief No addition pin function */\n   51: #define IOCON_PIO_OD_DI 0x00u      /*!<@brief Disables Open-drain function */\n   52  \n   53  /*!\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/device/LPC804.h:\n  810   *        integration loop (all pins set together). Self clears - clear is not indication it is done (see STATUS).\n  811   *  0b10..Normal polling using poll delay from POLL_TCNT register. This will start with the poll delay (which can be 0).\n  812:  *  0b11..The CAPT block will operate in low-power mode. This means it will use GPIO as input, use combination\n  813   *        touch measurements, and assume it is to wake the system. This will use the POLL_TCNT poll delay, and start\n  814   *        with the delay.\n  ...\n  832  #define CAPT_CTRL_TRIGGER_SHIFT                  (4U)\n  833  /*! TRIGGER - This selects what is being used as the trigger\n  834:  *  0b0..Uses YH GPIO. This is not normally used except in Low-power mode. But, it can be used with POLLNOW to baseline that measurement.\n  835   *  0b1..ACMP (if fitted). This assumes the ACMP state is fed in asynchronously and it will sample.\n  836   */\n  ...\n 1590  \n 1591  /* ----------------------------------------------------------------------------\n 1592:    -- GPIO Peripheral Access Layer\n 1593     ---------------------------------------------------------------------------- */\n 1594  \n 1595  /*!\n 1596:  * @addtogroup GPIO_Peripheral_Access_Layer GPIO Peripheral Access Layer\n 1597   * @{\n 1598   */\n 1599  \n 1600: /** GPIO - Register Layout Typedef */\n 1601  typedef struct {\n 1602:   __IO uint8_t B[1][31];                           /**< Byte pin registers for all port 0 and 1 GPIO pins, array offset: 0x0, array step: index*0x1F, index2*0x1 */\n 1603         uint8_t RESERVED_0[4065];\n 1604:   __IO uint32_t W[1][31];                          /**< Word pin registers for all port 0 and 1 GPIO pins, array offset: 0x1000, array step: index*0x7C, index2*0x4 */\n 1605         uint8_t RESERVED_1[3972];\n 1606    __IO uint32_t DIR[1];                            /**< Direction registers, array offset: 0x2000, array step: 0x4 */\n ....\n 1623         uint8_t RESERVED_10[124];\n 1624    __O  uint32_t DIRNOT[1];                         /**< Toggle pin direction bits for port, array offset: 0x2480, array step: 0x4 */\n 1625: } GPIO_Type;\n 1626  \n 1627  /* ----------------------------------------------------------------------------\n 1628:    -- GPIO Register Masks\n 1629     ---------------------------------------------------------------------------- */\n 1630  \n 1631  /*!\n 1632:  * @addtogroup GPIO_Register_Masks GPIO Register Masks\n 1633   * @{\n 1634   */\n 1635  \n 1636: /*! @name B - Byte pin registers for all port 0 and 1 GPIO pins */\n 1637  /*! @{ */\n 1638: #define GPIO_B_PBYTE_MASK                        (0x1U)\n 1639: #define GPIO_B_PBYTE_SHIFT                       (0U)\n 1640: #define GPIO_B_PBYTE(x)                          (((uint8_t)(((uint8_t)(x)) << GPIO_B_PBYTE_SHIFT)) & GPIO_B_PBYTE_MASK)\n 1641  /*! @} */\n 1642  \n 1643: /* The count of GPIO_B */\n 1644: #define GPIO_B_COUNT                             (1U)\n 1645  \n 1646: /* The count of GPIO_B */\n 1647: #define GPIO_B_COUNT2                            (31U)\n 1648  \n 1649: /*! @name W - Word pin registers for all port 0 and 1 GPIO pins */\n 1650  /*! @{ */\n 1651: #define GPIO_W_PWORD_MASK                        (0xFFFFFFFFU)\n 1652: #define GPIO_W_PWORD_SHIFT                       (0U)\n 1653: #define GPIO_W_PWORD(x)                          (((uint32_t)(((uint32_t)(x)) << GPIO_W_PWORD_SHIFT)) & GPIO_W_PWORD_MASK)\n 1654  /*! @} */\n 1655  \n 1656: /* The count of GPIO_W */\n 1657: #define GPIO_W_COUNT                             (1U)\n 1658  \n 1659: /* The count of GPIO_W */\n 1660: #define GPIO_W_COUNT2                            (31U)\n 1661  \n 1662  /*! @name DIR - Direction registers */\n 1663  /*! @{ */\n 1664: #define GPIO_DIR_DIRP_MASK                       (0x7FFFFFFFU)\n 1665: #define GPIO_DIR_DIRP_SHIFT                      (0U)\n 1666: #define GPIO_DIR_DIRP(x)                         (((uint32_t)(((uint32_t)(x)) << GPIO_DIR_DIRP_SHIFT)) & GPIO_DIR_DIRP_MASK)\n 1667  /*! @} */\n 1668  \n 1669: /* The count of GPIO_DIR */\n 1670: #define GPIO_DIR_COUNT                           (1U)\n 1671  \n 1672  /*! @name MASK - Mask register */\n 1673  /*! @{ */\n 1674: #define GPIO_MASK_MASKP_MASK                     (0x7FFFFFFFU)\n 1675: #define GPIO_MASK_MASKP_SHIFT                    (0U)\n 1676: #define GPIO_MASK_MASKP(x)                       (((uint32_t)(((uint32_t)(x)) << GPIO_MASK_MASKP_SHIFT)) & GPIO_MASK_MASKP_MASK)\n 1677  /*! @} */\n 1678  \n 1679: /* The count of GPIO_MASK */\n 1680: #define GPIO_MASK_COUNT                          (1U)\n 1681  \n 1682  /*! @name PIN - Port pin register */\n 1683  /*! @{ */\n 1684: #define GPIO_PIN_PORT_MASK                       (0x7FFFFFFFU)\n 1685: #define GPIO_PIN_PORT_SHIFT                      (0U)\n 1686: #define GPIO_PIN_PORT(x)                         (((uint32_t)(((uint32_t)(x)) << GPIO_PIN_PORT_SHIFT)) & GPIO_PIN_PORT_MASK)\n 1687  /*! @} */\n 1688  \n 1689: /* The count of GPIO_PIN */\n 1690: #define GPIO_PIN_COUNT                           (1U)\n 1691  \n 1692  /*! @name MPIN - Masked port register */\n 1693  /*! @{ */\n 1694: #define GPIO_MPIN_MPORTP_MASK                    (0x7FFFFFFFU)\n 1695: #define GPIO_MPIN_MPORTP_SHIFT                   (0U)\n 1696: #define GPIO_MPIN_MPORTP(x)                      (((uint32_t)(((uint32_t)(x)) << GPIO_MPIN_MPORTP_SHIFT)) & GPIO_MPIN_MPORTP_MASK)\n 1697  /*! @} */\n 1698  \n 1699: /* The count of GPIO_MPIN */\n 1700: #define GPIO_MPIN_COUNT                          (1U)\n 1701  \n 1702  /*! @name SET - Write: Set register for port Read: output bits for port */\n 1703  /*! @{ */\n 1704: #define GPIO_SET_SETP_MASK                       (0x7FFFFFFFU)\n 1705: #define GPIO_SET_SETP_SHIFT                      (0U)\n 1706: #define GPIO_SET_SETP(x)                         (((uint32_t)(((uint32_t)(x)) << GPIO_SET_SETP_SHIFT)) & GPIO_SET_SETP_MASK)\n 1707  /*! @} */\n 1708  \n 1709: /* The count of GPIO_SET */\n 1710: #define GPIO_SET_COUNT                           (1U)\n 1711  \n 1712  /*! @name CLR - Clear port */\n 1713  /*! @{ */\n 1714: #define GPIO_CLR_CLRP_MASK                       (0x7FFFFFFFU)\n 1715: #define GPIO_CLR_CLRP_SHIFT                      (0U)\n 1716: #define GPIO_CLR_CLRP(x)                         (((uint32_t)(((uint32_t)(x)) << GPIO_CLR_CLRP_SHIFT)) & GPIO_CLR_CLRP_MASK)\n 1717  /*! @} */\n 1718  \n 1719: /* The count of GPIO_CLR */\n 1720: #define GPIO_CLR_COUNT                           (1U)\n 1721  \n 1722  /*! @name NOT - Toggle port */\n 1723  /*! @{ */\n 1724: #define GPIO_NOT_NOTP_MASK                       (0x7FFFFFFFU)\n 1725: #define GPIO_NOT_NOTP_SHIFT                      (0U)\n 1726: #define GPIO_NOT_NOTP(x)                         (((uint32_t)(((uint32_t)(x)) << GPIO_NOT_NOTP_SHIFT)) & GPIO_NOT_NOTP_MASK)\n 1727  /*! @} */\n 1728  \n 1729: /* The count of GPIO_NOT */\n 1730: #define GPIO_NOT_COUNT                           (1U)\n 1731  \n 1732  /*! @name DIRSET - Set pin direction bits for port */\n 1733  /*! @{ */\n 1734: #define GPIO_DIRSET_DIRSETP_MASK                 (0x7FFFFFFFU)\n 1735: #define GPIO_DIRSET_DIRSETP_SHIFT                (0U)\n 1736: #define GPIO_DIRSET_DIRSETP(x)                   (((uint32_t)(((uint32_t)(x)) << GPIO_DIRSET_DIRSETP_SHIFT)) & GPIO_DIRSET_DIRSETP_MASK)\n 1737  /*! @} */\n 1738  \n 1739: /* The count of GPIO_DIRSET */\n 1740: #define GPIO_DIRSET_COUNT                        (1U)\n 1741  \n 1742  /*! @name DIRCLR - Clear pin direction bits for port */\n 1743  /*! @{ */\n 1744: #define GPIO_DIRCLR_DIRCLRP_MASK                 (0x7FFFFFFFU)\n 1745: #define GPIO_DIRCLR_DIRCLRP_SHIFT                (0U)\n 1746: #define GPIO_DIRCLR_DIRCLRP(x)                   (((uint32_t)(((uint32_t)(x)) << GPIO_DIRCLR_DIRCLRP_SHIFT)) & GPIO_DIRCLR_DIRCLRP_MASK)\n 1747  /*! @} */\n 1748  \n 1749: /* The count of GPIO_DIRCLR */\n 1750: #define GPIO_DIRCLR_COUNT                        (1U)\n 1751  \n 1752  /*! @name DIRNOT - Toggle pin direction bits for port */\n 1753  /*! @{ */\n 1754: #define GPIO_DIRNOT_DIRNOTP_MASK                 (0x7FFFFFFFU)\n 1755: #define GPIO_DIRNOT_DIRNOTP_SHIFT                (0U)\n 1756: #define GPIO_DIRNOT_DIRNOTP(x)                   (((uint32_t)(((uint32_t)(x)) << GPIO_DIRNOT_DIRNOTP_SHIFT)) & GPIO_DIRNOT_DIRNOTP_MASK)\n 1757  /*! @} */\n 1758  \n 1759: /* The count of GPIO_DIRNOT */\n 1760: #define GPIO_DIRNOT_COUNT                        (1U)\n 1761  \n 1762  \n 1763  /*!\n 1764   * @}\n 1765:  */ /* end of group GPIO_Register_Masks */\n 1766  \n 1767  \n 1768: /* GPIO - Peripheral instance base addresses */\n 1769: /** Peripheral GPIO base address */\n 1770: #define GPIO_BASE                                (0xA0000000u)\n 1771: /** Peripheral GPIO base pointer */\n 1772: #define GPIO                                     ((GPIO_Type *)GPIO_BASE)\n 1773: /** Array initializer of GPIO peripheral base addresses */\n 1774: #define GPIO_BASE_ADDRS                          { GPIO_BASE }\n 1775: /** Array initializer of GPIO peripheral base pointers */\n 1776: #define GPIO_BASE_PTRS                           { GPIO }\n 1777  \n 1778  /*!\n 1779   * @}\n 1780:  */ /* end of group GPIO_Peripheral_Access_Layer */\n 1781  \n 1782  \n ....\n 2404  /** IOCON - Register Layout Typedef */\n 2405  typedef struct {\n 2406:   __IO uint32_t PIO[30];                           /**< Digital I/O control for pins PIO0_17..Digital I/O control for pins PIO0_18, array offset: 0x0, array step: 0x4 */\n 2407  } IOCON_Type;\n 2408  \n ....\n 2416   */\n 2417  \n 2418: /*! @name PIO - Digital I/O control for pins PIO0_17..Digital I/O control for pins PIO0_18 */\n 2419  /*! @{ */\n 2420: #define IOCON_PIO_MODE_MASK                      (0x18U)\n 2421: #define IOCON_PIO_MODE_SHIFT                     (3U)\n 2422  /*! MODE - Selects function mode (on-chip pull-up/pull-down resistor control).\n 2423   *  0b00..Inactive. Inactive (no pull-down/pull-up resistor enabled).\n ....\n 2426   *  0b11..Repeater. Repeater mode.\n 2427   */\n 2428: #define IOCON_PIO_MODE(x)                        (((uint32_t)(((uint32_t)(x)) << IOCON_PIO_MODE_SHIFT)) & IOCON_PIO_MODE_MASK)\n 2429: #define IOCON_PIO_HYS_MASK                       (0x20U)\n 2430: #define IOCON_PIO_HYS_SHIFT                      (5U)\n 2431  /*! HYS - Hysteresis.\n 2432   *  0b0..Disable\n 2433   *  0b1..Enable\n 2434   */\n 2435: #define IOCON_PIO_HYS(x)                         (((uint32_t)(((uint32_t)(x)) << IOCON_PIO_HYS_SHIFT)) & IOCON_PIO_HYS_MASK)\n 2436: #define IOCON_PIO_INV_MASK                       (0x40U)\n 2437: #define IOCON_PIO_INV_SHIFT                      (6U)\n 2438  /*! INV - Invert input\n 2439   *  0b0..Input not inverted (HIGH on pin reads as 1; LOW on pin reads as 0).\n 2440   *  0b1..Input inverted (HIGH on pin reads as 0, LOW on pin reads as 1).\n 2441   */\n 2442: #define IOCON_PIO_INV(x)                         (((uint32_t)(((uint32_t)(x)) << IOCON_PIO_INV_SHIFT)) & IOCON_PIO_INV_MASK)\n 2443: #define IOCON_PIO_OD_MASK                        (0x400U)\n 2444: #define IOCON_PIO_OD_SHIFT                       (10U)\n 2445  /*! OD - Open-drain mode.\n 2446   *  0b0..Disable.\n 2447   *  0b1..Open-drain mode enabled. Remark: This is not a true open-drain mode.\n 2448   */\n 2449: #define IOCON_PIO_OD(x)                          (((uint32_t)(((uint32_t)(x)) << IOCON_PIO_OD_SHIFT)) & IOCON_PIO_OD_MASK)\n 2450: #define IOCON_PIO_DACMODE_MASK                   (0x10000U)\n 2451: #define IOCON_PIO_DACMODE_SHIFT                  (16U)\n 2452  /*! DACMODE - DAC mode enable.\n 2453   *  0b0..Disable.\n 2454   *  0b1..Enable.\n 2455   */\n 2456: #define IOCON_PIO_DACMODE(x)                     (((uint32_t)(((uint32_t)(x)) << IOCON_PIO_DACMODE_SHIFT)) & IOCON_PIO_DACMODE_MASK)\n 2457  /*! @} */\n 2458  \n 2459: /* The count of IOCON_PIO */\n 2460: #define IOCON_PIO_COUNT                          (30U)\n 2461  \n 2462  \n ....\n 2476  #define IOCON_BASE_PTRS                          { IOCON }\n 2477  \n 2478: #define    IOCON_INDEX_PIO0_17       ( 0)\n 2479: #define    IOCON_INDEX_PIO0_13       ( 1)\n 2480: #define    IOCON_INDEX_PIO0_12       ( 2)\n 2481: #define    IOCON_INDEX_PIO0_5        ( 3)\n 2482: #define    IOCON_INDEX_PIO0_4        ( 4)\n 2483: #define    IOCON_INDEX_PIO0_3        ( 5)\n 2484: #define    IOCON_INDEX_PIO0_2        ( 6)\n 2485: #define    IOCON_INDEX_PIO0_11       ( 7)\n 2486: #define    IOCON_INDEX_PIO0_10       ( 8)\n 2487: #define    IOCON_INDEX_PIO0_16       ( 9)\n 2488: #define    IOCON_INDEX_PIO0_15       (10)\n 2489: #define    IOCON_INDEX_PIO0_1        (11)\n 2490: #define    IOCON_INDEX_PIO0_21       (12)\n 2491: #define    IOCON_INDEX_PIO0_9        (13)\n 2492: #define    IOCON_INDEX_PIO0_8        (14)\n 2493: #define    IOCON_INDEX_PIO0_7        (15)\n 2494: #define    IOCON_INDEX_PIO0_29       (16)\n 2495: #define    IOCON_INDEX_PIO0_0        (17)\n 2496: #define    IOCON_INDEX_PIO0_14       (18)\n 2497: #define    IOCON_INDEX_PIO0_28       (19)\n 2498: #define    IOCON_INDEX_PIO0_27       (20)\n 2499: #define    IOCON_INDEX_PIO0_26       (21)\n 2500: #define    IOCON_INDEX_PIO0_20       (22)\n 2501: #define    IOCON_INDEX_PIO0_30       (23)\n 2502: #define    IOCON_INDEX_PIO0_19       (24)\n 2503: #define    IOCON_INDEX_PIO0_25       (25)\n 2504: #define    IOCON_INDEX_PIO0_24       (26)\n 2505: #define    IOCON_INDEX_PIO0_23       (27)\n 2506: #define    IOCON_INDEX_PIO0_22       (28)\n 2507: #define    IOCON_INDEX_PIO0_18       (29)\n 2508  \n 2509  \n ....\n 2790  #define PINT_PMCTRL_ENA_RXEV_MASK                (0x2U)\n 2791  #define PINT_PMCTRL_ENA_RXEV_SHIFT               (1U)\n 2792: /*! ENA_RXEV - Enables the RXEV output to the CPU and/or to a GPIO output when the specified boolean expression evaluates to true.\n 2793   *  0b0..Disabled. RXEV output to the CPU is disabled.\n 2794   *  0b1..Enabled. RXEV output to the CPU is enabled.\n ....\n 3844        __IO uint32_t PINASSIGN4;                        /**< Pin assign register 4. Assign movable functions T0_MAT0, T0_MAT1,T0_MAT2,T0_MAT3., offset: 0x10 */\n 3845        __IO uint32_t PINASSIGN5;                        /**< Pin assign register 5. Assign movable functions I2C0_SDA, I2C0_SCL, COMP0_OUT, CLKOUT, offset: 0x14 */\n 3846:       __IO uint32_t PINASSIGN6;                        /**< Pin assign register 6. Assign movable functions GPIO_INT_BMAT, LVLSHFT_IN0, LVLSHFT_IN1, LVLSHFT_OUT0., offset: 0x18 */\n 3847        __IO uint32_t PINASSIGN7;                        /**< Pin assign register 7. Assign movable functions LVLSHFT_OUT1, I2C1_SDA, I2C1_SCL, PLU_CLKIN., offset: 0x1C */\n 3848        __IO uint32_t PINASSIGN8;                        /**< Pin assign register 8. Assign movable functions CAPT_X0, CAPT_X1, CAPT_X2, CAPT_X3., offset: 0x20 */\n ....\n 3962  /*! @} */\n 3963  \n 3964: /*! @name PINASSIGN6 - Pin assign register 6. Assign movable functions GPIO_INT_BMAT, LVLSHFT_IN0, LVLSHFT_IN1, LVLSHFT_OUT0. */\n 3965  /*! @{ */\n 3966: #define SWM_PINASSIGN6_GPIO_INT_BMAT_O_MASK      (0xFFU)\n 3967: #define SWM_PINASSIGN6_GPIO_INT_BMAT_O_SHIFT     (0U)\n 3968: #define SWM_PINASSIGN6_GPIO_INT_BMAT_O(x)        (((uint32_t)(((uint32_t)(x)) << SWM_PINASSIGN6_GPIO_INT_BMAT_O_SHIFT)) & SWM_PINASSIGN6_GPIO_INT_BMAT_O_MASK)\n 3969  #define SWM_PINASSIGN6_LVLSHFT_IN0_MASK          (0xFF00U)\n 3970  #define SWM_PINASSIGN6_LVLSHFT_IN0_SHIFT         (8U)\n ....\n 4047  #define SWM_PINASSIGNFIXED0_PLU_INPUT0_SHIFT     (0U)\n 4048  /*! PLU_INPUT0 - PLU_INPUT0 function assignment.\n 4049:  *  0b00..Assign to PIO0_00.\n 4050:  *  0b01..Assign to PIO0_08.\n 4051:  *  0b10..Assign to PIO0_17.\n 4052   *  0b11..None.\n 4053   */\n ....\n 4056  #define SWM_PINASSIGNFIXED0_PLU_INPUT1_SHIFT     (2U)\n 4057  /*! PLU_INPUT1 - PLU_INPUT1 function assignment\n 4058:  *  0b00..Assign to PIO0_01.\n 4059:  *  0b01..Assign to PIO0_09.\n 4060:  *  0b10..Assign to PIO0_18.\n 4061   *  0b11..None.\n 4062   */\n ....\n 4065  #define SWM_PINASSIGNFIXED0_PLU_INPUT2_SHIFT     (4U)\n 4066  /*! PLU_INPUT2 - PLU_INPUT2 function assignment.\n 4067:  *  0b00..Assign to PIO0_02.\n 4068:  *  0b01..Assign to PIO0_10.\n 4069:  *  0b10..Assign to PIO0_19.\n 4070   *  0b11..None.\n 4071   */\n ....\n 4074  #define SWM_PINASSIGNFIXED0_PLU_INPUT3_SHIFT     (6U)\n 4075  /*! PLU_INPUT3 - PLU_INPUT3 function assignment.\n 4076:  *  0b00..Assign to PIO0_03.\n 4077:  *  0b01..Assign to PIO0_11.\n 4078:  *  0b10..Assign to PIO0_20.\n 4079   *  0b11..None.\n 4080   */\n ....\n 4083  #define SWM_PINASSIGNFIXED0_PLU_INPUT4_SHIFT     (8U)\n 4084  /*! PLU_INPUT4 - PLU_INPUT4 function assignment.\n 4085:  *  0b00..Assign to PIO0_04.\n 4086:  *  0b01..Assign to PIO0_12.\n 4087:  *  0b10..Assign to PIO0_21.\n 4088   *  0b11..None.\n 4089   */\n ....\n 4092  #define SWM_PINASSIGNFIXED0_PLU_INPUT5_SHIFT     (10U)\n 4093  /*! PLU_INPUT5 - PLU_INPUT5 function assignment.\n 4094:  *  0b00..Assign to PIO0_05.\n 4095:  *  0b01..Assign to PIO0_13.\n 4096:  *  0b10..Assign to PIO0_22.\n 4097   *  0b11..None.\n 4098   */\n ....\n 4101  #define SWM_PINASSIGNFIXED0_PLU_OUT0_SHIFT       (12U)\n 4102  /*! PLU_OUT0 - PLU_OUT0 function assignment.\n 4103:  *  0b00..Assign to PIO0_07.\n 4104:  *  0b01..Assign to PIO0_14.\n 4105:  *  0b10..Assign to PIO0_23.\n 4106   *  0b11..None.\n 4107   */\n ....\n 4110  #define SWM_PINASSIGNFIXED0_PLU_OUT1_SHIFT       (14U)\n 4111  /*! PLU_OUT1 - PLU_OUT1 function assignment.\n 4112:  *  0b00..Assign to PIO0_08.\n 4113:  *  0b01..Assign to PIO0_15.\n 4114:  *  0b10..Assign to PIO0_24.\n 4115   *  0b11..None.\n 4116   */\n ....\n 4119  #define SWM_PINASSIGNFIXED0_PLU_OUT2_SHIFT       (16U)\n 4120  /*! PLU_OUT2 - PLU_OUT2 function assignment.\n 4121:  *  0b00..Assign to PIO0_09.\n 4122:  *  0b01..Assign to PIO0_16.\n 4123:  *  0b10..Assign to PIO0_25.\n 4124   *  0b11..None.\n 4125   */\n ....\n 4128  #define SWM_PINASSIGNFIXED0_PLU_OUT3_SHIFT       (18U)\n 4129  /*! PLU_OUT3 - PLU_OUT3 function assignment.\n 4130:  *  0b00..Assign to PIO0_10.\n 4131:  *  0b01..Assign to PIO0_17.\n 4132:  *  0b10..Assign to PIO0_26.\n 4133   *  0b11..None.\n 4134   */\n ....\n 4137  #define SWM_PINASSIGNFIXED0_PLU_OUT4_SHIFT       (20U)\n 4138  /*! PLU_OUT4 - PLU_OUT4 function assignment.\n 4139:  *  0b00..Assign to PIO0_11.\n 4140:  *  0b01..Assign to PIO0_18.\n 4141:  *  0b10..Assign to PIO0_27.\n 4142   *  0b11..None.\n 4143   */\n ....\n 4146  #define SWM_PINASSIGNFIXED0_PLU_OUT5_SHIFT       (22U)\n 4147  /*! PLU_OUT5 - PLU_OUT5 function assignment.\n 4148:  *  0b00..Assign to PIO0_12.\n 4149:  *  0b01..Assign to PIO0_19.\n 4150:  *  0b10..Assign to PIO0_28.\n 4151   *  0b11..None.\n 4152   */\n ....\n 4155  #define SWM_PINASSIGNFIXED0_PLU_OUT6_SHIFT       (24U)\n 4156  /*! PLU_OUT6 - PLU_OUT6 function assignment.\n 4157:  *  0b00..Assign to PIO0_13.\n 4158:  *  0b01..Assign to PIO0_20.\n 4159:  *  0b10..Assign to PIO0_29.\n 4160   *  0b11..None.\n 4161   */\n ....\n 4164  #define SWM_PINASSIGNFIXED0_PLU_OUT7_SHIFT       (26U)\n 4165  /*! PLU_OUT7 - PLU_OUT7 function assignment.\n 4166:  *  0b00..Assign to PIO0_14.\n 4167:  *  0b01..Assign to PIO0_21.\n 4168:  *  0b10..Assign to PIO0_30.\n 4169   *  0b11..None.\n 4170   */\n ....\n 4177  #define SWM_PINENABLE0_ACMP_I1_SHIFT             (0U)\n 4178  /*! ACMP_I1 - ACMP_I1 function select.\n 4179:  *  0b0..ACMP_I1 enabled on pin PIO0_00.\n 4180   *  0b1..ACMP_I1 disabled.\n 4181   */\n ....\n 4184  #define SWM_PINENABLE0_ACMP_I2_SHIFT             (1U)\n 4185  /*! ACMP_I2 - ACMP_I2 function select.\n 4186:  *  0b0..ACMP_I2 enabled on pin PIO0_1.\n 4187   *  0b1..ACMP_I2 disabled.\n 4188   */\n ....\n 4191  #define SWM_PINENABLE0_ACMP_I3_SHIFT             (2U)\n 4192  /*! ACMP_I3 - ACMP_I3 function select.\n 4193:  *  0b0..ACMP_I3 enabled on pin PIO0_14.\n 4194   *  0b1..ACMP_I3 disabled.\n 4195   */\n ....\n 4198  #define SWM_PINENABLE0_ACMP_I4_SHIFT             (3U)\n 4199  /*! ACMP_I4 - ACMP_I4 function select.\n 4200:  *  0b0..ACMP_I4 enabled on pin PIO0_16.\n 4201   *  0b1..ACMP_I4 disabled.\n 4202   */\n ....\n 4205  #define SWM_PINENABLE0_SWCLK_SHIFT               (4U)\n 4206  /*! SWCLK - SWCLK function select.\n 4207:  *  0b0..SWCLK enabled on pin PIO0_3.\n 4208   *  0b1..SWCLK disabled.\n 4209   */\n ....\n 4212  #define SWM_PINENABLE0_SWDIO_SHIFT               (5U)\n 4213  /*! SWDIO - SWDIO function select.\n 4214:  *  0b0..SWDIO enabled on pin PIO0_2.\n 4215   *  0b1..SWDIO disabled.\n 4216   */\n ....\n 4219  #define SWM_PINENABLE0_RESETN_SHIFT              (6U)\n 4220  /*! RESETN - RESETN function select.\n 4221:  *  0b0..RESETN enabled on pin PIO0_5.\n 4222   *  0b1..RESETN disabled.\n 4223   */\n ....\n 4226  #define SWM_PINENABLE0_CLKIN_SHIFT               (7U)\n 4227  /*! CLKIN - CLKIN function select.\n 4228:  *  0b0..CLKIN enabled on pin PIO0_1.\n 4229   *  0b1..CLKIN disabled.\n 4230   */\n ....\n 4233  #define SWM_PINENABLE0_WKCLKIN_SHIFT             (8U)\n 4234  /*! WKCLKIN - WKCLK_IN function select.\n 4235:  *  0b0..WKCLK_IN enabled on pin PIO0_11.\n 4236   *  0b1..WKCLK_IN disabled.\n 4237   */\n ....\n 4240  #define SWM_PINENABLE0_VDDCMP_SHIFT              (9U)\n 4241  /*! VDDCMP - VDDCMP function select.\n 4242:  *  0b0..VDDCMP enabled on pin PIO0_6.\n 4243   *  0b1..VDDCMP disabled.\n 4244   */\n ....\n 4247  #define SWM_PINENABLE0_ADC_0_SHIFT               (10U)\n 4248  /*! ADC_0 - ADC_0 function select.\n 4249:  *  0b0..ADC_0 enabled on pin PIO0_1.\n 4250   *  0b1..ADC_0 disabled.\n 4251   */\n ....\n 4254  #define SWM_PINENABLE0_ADC_1_SHIFT               (11U)\n 4255  /*! ADC_1 - ADC_1 function select.\n 4256:  *  0b0..ADC_1 enabled on pin PIO0_7.\n 4257   *  0b1..ADC_1 disabled.\n 4258   */\n ....\n 4261  #define SWM_PINENABLE0_ADC_2_SHIFT               (12U)\n 4262  /*! ADC_2 - ADC_2 function select.\n 4263:  *  0b0..ADC_2 enabled on pin PIO0_14.\n 4264   *  0b1..ADC_2 disabled.\n 4265   */\n ....\n 4268  #define SWM_PINENABLE0_ADC_3_SHIFT               (13U)\n 4269  /*! ADC_3 - ADC_3 function select.\n 4270:  *  0b0..ADC_3 enabled on pin PIO0_16.\n 4271   *  0b1..ADC_3 disabled.\n 4272   */\n ....\n 4275  #define SWM_PINENABLE0_ADC_4_SHIFT               (14U)\n 4276  /*! ADC_4 - ADC_4 function select.\n 4277:  *  0b0..ADC_4 enabled on pin PIO0_9.\n 4278   *  0b1..ADC_4 disabled.\n 4279   */\n ....\n 4282  #define SWM_PINENABLE0_ADC_5_SHIFT               (15U)\n 4283  /*! ADC_5 - ADC_5 function select.\n 4284:  *  0b0..ADC_5 enabled on pin PIO0_8.\n 4285   *  0b1..ADC_5 disabled.\n 4286   */\n ....\n 4289  #define SWM_PINENABLE0_ADC_6_SHIFT               (16U)\n 4290  /*! ADC_6 - ADC_6 function select.\n 4291:  *  0b0..ADC_6 enabled on pin PIO0_11.\n 4292   *  0b1..ADC_6 disabled.\n 4293   */\n ....\n 4296  #define SWM_PINENABLE0_ADC_7_SHIFT               (17U)\n 4297  /*! ADC_7 - ADC_7 function select.\n 4298:  *  0b0..ADC_7 enabled on pin PIO0_10.\n 4299   *  0b1..ADC_7 disabled.\n 4300   */\n ....\n 4303  #define SWM_PINENABLE0_ADC_8_SHIFT               (18U)\n 4304  /*! ADC_8 - ADC_8 function select.\n 4305:  *  0b0..ADC_8 enabled on pin PIO0_15.\n 4306   *  0b1..ADC_8 disabled.\n 4307   */\n ....\n 4310  #define SWM_PINENABLE0_ADC_9_SHIFT               (19U)\n 4311  /*! ADC_9 - ADC_9 function select.\n 4312:  *  0b0..ADC_9 enabled on pin PIO0_17.\n 4313   *  0b1..ADC_9 disabled.\n 4314   */\n ....\n 4317  #define SWM_PINENABLE0_ADC_10_SHIFT              (20U)\n 4318  /*! ADC_10 - ADC_10 function select.\n 4319:  *  0b0..ADC_10 enabled on pin PIO0_13.\n 4320   *  0b1..ADC_10 disabled.\n 4321   */\n ....\n 4324  #define SWM_PINENABLE0_ADC_11_SHIFT              (21U)\n 4325  /*! ADC_11 - ADC_11 function select.\n 4326:  *  0b0..ADC_11 enabled on pin PIO0_4.\n 4327   *  0b1..ADC_11 disabled.\n 4328   */\n ....\n 4331  #define SWM_PINENABLE0_ACMP_I5_SHIFT             (22U)\n 4332  /*! ACMP_I5 - ACMP_I5 function select.\n 4333:  *  0b0..ACMP_I5 enabled on pin PIO0_21.\n 4334   *  0b1..ACMP_I5 disabled.\n 4335   */\n ....\n 4338  #define SWM_PINENABLE0_DACOUT0_SHIFT             (23U)\n 4339  /*! DACOUT0 - DACOUT0 function select.\n 4340:  *  0b0..DACOUT0 enabled on pin PIO0_19.\n 4341   *  0b1..DACOUT0 disabled.\n 4342   */\n ....\n 4410    __IO uint32_t CLKOUTDIV;                         /**< CLKOUT clock divider registers, offset: 0xF4 */\n 4411         uint8_t RESERVED_8[8];\n 4412:   __IO uint32_t PIOPORACP;                         /**< POR captured PIO0 status 0, offset: 0x100 */\n 4413         uint8_t RESERVED_9[76];\n 4414    __IO uint32_t BODCTRL;                           /**< BOD control register, offset: 0x150 */\n ....\n 4589   */\n 4590  #define SYSCON_SYSAHBCLKCTRL0_I2C0(x)            (((uint32_t)(((uint32_t)(x)) << SYSCON_SYSAHBCLKCTRL0_I2C0_SHIFT)) & SYSCON_SYSAHBCLKCTRL0_I2C0_MASK)\n 4591: #define SYSCON_SYSAHBCLKCTRL0_GPIO0_MASK         (0x40U)\n 4592: #define SYSCON_SYSAHBCLKCTRL0_GPIO0_SHIFT        (6U)\n 4593: /*! GPIO0 - Enables clock for GPIO0 port registers.\n 4594   *  0b0..disable\n 4595   *  0b1..enable\n 4596   */\n 4597: #define SYSCON_SYSAHBCLKCTRL0_GPIO0(x)           (((uint32_t)(((uint32_t)(x)) << SYSCON_SYSAHBCLKCTRL0_GPIO0_SHIFT)) & SYSCON_SYSAHBCLKCTRL0_GPIO0_MASK)\n 4598  #define SYSCON_SYSAHBCLKCTRL0_SWM_MASK           (0x80U)\n 4599  #define SYSCON_SYSAHBCLKCTRL0_SWM_SHIFT          (7U)\n ....\n 4694   */\n 4695  #define SYSCON_SYSAHBCLKCTRL0_DAC(x)             (((uint32_t)(((uint32_t)(x)) << SYSCON_SYSAHBCLKCTRL0_DAC_SHIFT)) & SYSCON_SYSAHBCLKCTRL0_DAC_MASK)\n 4696: #define SYSCON_SYSAHBCLKCTRL0_GPIO_INT_MASK      (0x10000000U)\n 4697: #define SYSCON_SYSAHBCLKCTRL0_GPIO_INT_SHIFT     (28U)\n 4698: /*! GPIO_INT - Enable clock for GPIO pin interrupt registers\n 4699   *  0b0..disable\n 4700   *  0b1..enable\n 4701   */\n 4702: #define SYSCON_SYSAHBCLKCTRL0_GPIO_INT(x)        (((uint32_t)(((uint32_t)(x)) << SYSCON_SYSAHBCLKCTRL0_GPIO_INT_SHIFT)) & SYSCON_SYSAHBCLKCTRL0_GPIO_INT_MASK)\n 4703  /*! @} */\n 4704  \n ....\n 4733   */\n 4734  #define SYSCON_PRESETCTRL0_I2C0_RST_N(x)         (((uint32_t)(((uint32_t)(x)) << SYSCON_PRESETCTRL0_I2C0_RST_N_SHIFT)) & SYSCON_PRESETCTRL0_I2C0_RST_N_MASK)\n 4735: #define SYSCON_PRESETCTRL0_GPIO0_RST_N_MASK      (0x40U)\n 4736: #define SYSCON_PRESETCTRL0_GPIO0_RST_N_SHIFT     (6U)\n 4737: /*! GPIO0_RST_N - GPIO0 reset control\n 4738:  *  0b0..Assert the GPIO0 reset.\n 4739:  *  0b1..Clear the GPIO0 reset.\n 4740   */\n 4741: #define SYSCON_PRESETCTRL0_GPIO0_RST_N(x)        (((uint32_t)(((uint32_t)(x)) << SYSCON_PRESETCTRL0_GPIO0_RST_N_SHIFT)) & SYSCON_PRESETCTRL0_GPIO0_RST_N_MASK)\n 4742  #define SYSCON_PRESETCTRL0_SWM_RST_N_MASK        (0x80U)\n 4743  #define SYSCON_PRESETCTRL0_SWM_RST_N_SHIFT       (7U)\n ....\n 4831   */\n 4832  #define SYSCON_PRESETCTRL0_DAC0_RST_N(x)         (((uint32_t)(((uint32_t)(x)) << SYSCON_PRESETCTRL0_DAC0_RST_N_SHIFT)) & SYSCON_PRESETCTRL0_DAC0_RST_N_MASK)\n 4833: #define SYSCON_PRESETCTRL0_GPIOINT_RST_N_MASK    (0x10000000U)\n 4834: #define SYSCON_PRESETCTRL0_GPIOINT_RST_N_SHIFT   (28U)\n 4835: /*! GPIOINT_RST_N - GPIOINT reset control\n 4836:  *  0b0..Assert the GPIOINT reset.\n 4837:  *  0b1..Clear the GPIOINT reset.\n 4838   */\n 4839: #define SYSCON_PRESETCTRL0_GPIOINT_RST_N(x)      (((uint32_t)(((uint32_t)(x)) << SYSCON_PRESETCTRL0_GPIOINT_RST_N_SHIFT)) & SYSCON_PRESETCTRL0_GPIOINT_RST_N_MASK)\n 4840  /*! @} */\n 4841  \n ....\n 5010  /*! @} */\n 5011  \n 5012: /*! @name PIOPORACP - POR captured PIO0 status 0 */\n 5013  /*! @{ */\n 5014: #define SYSCON_PIOPORACP_PIOSTAT_MASK            (0xFFFFFFFFU)\n 5015: #define SYSCON_PIOPORACP_PIOSTAT_SHIFT           (0U)\n 5016: #define SYSCON_PIOPORACP_PIOSTAT(x)              (((uint32_t)(((uint32_t)(x)) << SYSCON_PIOPORACP_PIOSTAT_SHIFT)) & SYSCON_PIOPORACP_PIOSTAT_MASK)\n 5017  /*! @} */\n 5018  \n ....\n 5084  #define SYSCON_STARTERP0_PINT0_MASK              (0x1U)\n 5085  #define SYSCON_STARTERP0_PINT0_SHIFT             (0U)\n 5086: /*! PINT0 - GPIO pin interrupt 0 wake-up\n 5087   *  0b0..Disabled\n 5088   *  0b1..Enabled\n ....\n 5091  #define SYSCON_STARTERP0_PINT1_MASK              (0x2U)\n 5092  #define SYSCON_STARTERP0_PINT1_SHIFT             (1U)\n 5093: /*! PINT1 - GPIO pin interrupt 1 wake-up\n 5094   *  0b0..Disabled\n 5095   *  0b1..Enabled\n ....\n 5098  #define SYSCON_STARTERP0_PINT2_MASK              (0x4U)\n 5099  #define SYSCON_STARTERP0_PINT2_SHIFT             (2U)\n 5100: /*! PINT2 - GPIO pin interrupt 2 wake-up\n 5101   *  0b0..Disabled\n 5102   *  0b1..Enabled\n ....\n 5105  #define SYSCON_STARTERP0_PINT3_MASK              (0x8U)\n 5106  #define SYSCON_STARTERP0_PINT3_SHIFT             (3U)\n 5107: /*! PINT3 - GPIO pin interrupt 3 wake-up\n 5108   *  0b0..Disabled\n 5109   *  0b1..Enabled\n ....\n 5112  #define SYSCON_STARTERP0_PINT4_MASK              (0x10U)\n 5113  #define SYSCON_STARTERP0_PINT4_SHIFT             (4U)\n 5114: /*! PINT4 - GPIO pin interrupt 4 wake-up\n 5115   *  0b0..Disabled\n 5116   *  0b1..Enabled\n ....\n 5119  #define SYSCON_STARTERP0_PINT5_MASK              (0x20U)\n 5120  #define SYSCON_STARTERP0_PINT5_SHIFT             (5U)\n 5121: /*! PINT5 - GPIO pin interrupt 5 wake-up\n 5122   *  0b0..Disabled\n 5123   *  0b1..Enabled\n ....\n 5126  #define SYSCON_STARTERP0_PINT6_MASK              (0x40U)\n 5127  #define SYSCON_STARTERP0_PINT6_SHIFT             (6U)\n 5128: /*! PINT6 - GPIO pin interrupt 6 wake-up\n 5129   *  0b0..Disabled\n 5130   *  0b1..Enabled\n ....\n 5133  #define SYSCON_STARTERP0_PINT7_MASK              (0x80U)\n 5134  #define SYSCON_STARTERP0_PINT7_SHIFT             (7U)\n 5135: /*! PINT7 - GPIO pin interrupt 7 wake-up\n 5136   *  0b0..Disabled\n 5137   *  0b1..Enabled\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/device/LPC804_features.h:\n   37      /* @brief CTIMER availability on the SoC. */\n   38      #define FSL_FEATURE_SOC_CTIMER_COUNT (1)\n   39:     /* @brief GPIO availability on the SoC. */\n   40:     #define FSL_FEATURE_SOC_GPIO_COUNT (1)\n   41      /* @brief I2C availability on the SoC. */\n   42      #define FSL_FEATURE_SOC_I2C_COUNT (2)\n   ..\n   70      /* @brief DAC availability on the SoC. */\n   71      #define FSL_FEATURE_SOC_DAC_COUNT (1)\n   72:     /* @brief GPIO availability on the SoC. */\n   73:     #define FSL_FEATURE_SOC_GPIO_COUNT (1)\n   74      /* @brief I2C availability on the SoC. */\n   75      #define FSL_FEATURE_SOC_I2C_COUNT (2)\n   ..\n  131  /* CLOCK module features */\n  132  \n  133: /* @brief GPIOINT clock source. */\n  134: #define FSL_FEATURE_CLOCK_HAS_GPIOINT_CLOCK_SOURCE (1)\n  135  \n  136  /* CTIMER module features */\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_clock.c:\n  292  {\n  293      /* remove the pull up and pull down resistors in the IOCON */\n  294:     IOCON->PIO[IOCON_INDEX_PIO0_1] &= ~IOCON_PIO_MODE_MASK;\n  295      /* enable the 1 bit functions for CLKIN */\n  296      SWM0->PINENABLE0 &= ~SWM_PINENABLE0_CLKIN_MASK;\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_clock.h:\n   94          kCLOCK_Iocon, \\\n   95      }\n   96: /*! @brief Clock ip name array for GPIO. */\n   97: #define GPIO_CLOCKS   \\\n   98      {                 \\\n   99:         kCLOCK_Gpio0, \\\n  100      }\n  101: /*! @brief Clock ip name array for GPIO_INT. */\n  102: #define GPIO_INT_CLOCKS \\\n  103      {                   \\\n  104:         kCLOCK_GpioInt, \\\n  105      }\n  106  /*! @brief Clock ip name array for CRC. */\n  ...\n  195      kCLOCK_Flash     = CLK_GATE_DEFINE(SYS_AHB_CLK_CTRL0, 4U),\n  196      kCLOCK_I2c0      = CLK_GATE_DEFINE(SYS_AHB_CLK_CTRL0, 5U),\n  197:     kCLOCK_Gpio0     = CLK_GATE_DEFINE(SYS_AHB_CLK_CTRL0, 6U),\n  198      kCLOCK_Swm       = CLK_GATE_DEFINE(SYS_AHB_CLK_CTRL0, 7U),\n  199      kCLOCK_Wkt       = CLK_GATE_DEFINE(SYS_AHB_CLK_CTRL0, 9U),\n  ...\n  210      kCLOCK_Ctimer0   = CLK_GATE_DEFINE(SYS_AHB_CLK_CTRL0, 25U),\n  211      kCLOCK_Dac       = CLK_GATE_DEFINE(SYS_AHB_CLK_CTRL0, 27U),\n  212:     kCLOCK_GpioInt   = CLK_GATE_DEFINE(SYS_AHB_CLK_CTRL0, 28U),\n  213      kCLOCK_Capt      = CLK_GATE_DEFINE(SYS_AHB_CLK_CTRL1, 0U),\n  214      kCLOCK_PLU       = CLK_GATE_DEFINE(SYS_AHB_CLK_CTRL1, 5U),\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_common.h:\n  132      kStatusGroup_IAP = 102,                   /*!< Group number for IAP status codes */\n  133  \n  134:     kStatusGroup_HAL_GPIO = 121,              /*!< Group number for HAL GPIO status codes. */\n  135      kStatusGroup_HAL_UART = 122,              /*!< Group number for HAL UART status codes. */\n  136      kStatusGroup_HAL_TIMER = 123,             /*!< Group number for HAL TIMER status codes. */\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_gpio.c:\n    7   */\n    8  \n    9: #include \"fsl_gpio.h\"\n   10  \n   11  /* Component ID definition, used by tools. */\n   12  #ifndef FSL_COMPONENT_ID\n   13: #define FSL_COMPONENT_ID \"platform.drivers.lpc_gpio\"\n   14  #endif\n   15  \n   ..\n   18   ******************************************************************************/\n   19  #if !(defined(FSL_SDK_DISABLE_DRIVER_CLOCK_CONTROL) && FSL_SDK_DISABLE_DRIVER_CLOCK_CONTROL)\n   20: /*! @brief Array to map FGPIO instance number to clock name. */\n   21: static const clock_ip_name_t s_gpioClockName[] = GPIO_CLOCKS;\n   22  #endif /* FSL_SDK_DISABLE_DRIVER_CLOCK_CONTROL */\n   23  \n   24: #if !(defined(FSL_FEATURE_GPIO_HAS_NO_RESET) && FSL_FEATURE_GPIO_HAS_NO_RESET)\n   25: /*! @brief Pointers to GPIO resets for each instance. */\n   26: static const reset_ip_name_t s_gpioResets[] = GPIO_RSTS_N;\n   27  #endif\n   28  /*******************************************************************************\n   ..\n   34   ******************************************************************************/\n   35  /*!\n   36:  * brief Initializes the GPIO peripheral.\n   37   *\n   38:  * This function ungates the GPIO clock.\n   39   *\n   40:  * param base   GPIO peripheral base pointer.\n   41:  * param port   GPIO port number.\n   42   */\n   43: void GPIO_PortInit(GPIO_Type *base, uint32_t port)\n   44  {\n   45  #if !(defined(FSL_SDK_DISABLE_DRIVER_CLOCK_CONTROL) && FSL_SDK_DISABLE_DRIVER_CLOCK_CONTROL)\n   46:     assert(port < ARRAY_SIZE(s_gpioClockName));\n   47  \n   48:     /* Upgate the GPIO clock */\n   49:     CLOCK_EnableClock(s_gpioClockName[port]);\n   50  #endif /* FSL_SDK_DISABLE_DRIVER_CLOCK_CONTROL */\n   51: #if !(defined(FSL_FEATURE_GPIO_HAS_NO_RESET) && FSL_FEATURE_GPIO_HAS_NO_RESET)\n   52:     /* Reset the GPIO module */\n   53:     RESET_PeripheralReset(s_gpioResets[port]);\n   54  #endif\n   55  }\n   56  \n   57  /*!\n   58:  * brief Initializes a GPIO pin used by the board.\n   59   *\n   60:  * To initialize the GPIO, define a pin configuration, either input or output, in the user file.\n   61:  * Then, call the GPIO_PinInit() function.\n   62   *\n   63   * This is an example to define an input pin or output pin configuration:\n   64   * code\n   65   * // Define a digital input pin configuration,\n   66:  * gpio_pin_config_t config =\n   67   * {\n   68:  *   kGPIO_DigitalInput,\n   69   *   0,\n   70   * }\n   71   * //Define a digital output pin configuration,\n   72:  * gpio_pin_config_t config =\n   73   * {\n   74:  *   kGPIO_DigitalOutput,\n   75   *   0,\n   76   * }\n   77   * endcode\n   78   *\n   79:  * param base   GPIO peripheral base pointer(Typically GPIO)\n   80:  * param port   GPIO port number\n   81:  * param pin    GPIO pin number\n   82:  * param config GPIO pin configuration pointer\n   83   */\n   84: void GPIO_PinInit(GPIO_Type *base, uint32_t port, uint32_t pin, const gpio_pin_config_t *config)\n   85  {\n   86:     if (config->pinDirection == kGPIO_DigitalInput)\n   87      {\n   88: #if defined(FSL_FEATURE_GPIO_DIRSET_AND_DIRCLR) && (FSL_FEATURE_GPIO_DIRSET_AND_DIRCLR)\n   89          base->DIRCLR[port] = 1U << pin;\n   90  #else\n   91          base->DIR[port] &= ~(1U << pin);\n   92: #endif /*FSL_FEATURE_GPIO_DIRSET_AND_DIRCLR*/\n   93      }\n   94      else\n   ..\n  104          }\n  105  /* Set pin direction */\n  106: #if defined(FSL_FEATURE_GPIO_DIRSET_AND_DIRCLR) && (FSL_FEATURE_GPIO_DIRSET_AND_DIRCLR)\n  107          base->DIRSET[port] = 1U << pin;\n  108  #else\n  109          base->DIR[port] |= 1U << pin;\n  110: #endif /*FSL_FEATURE_GPIO_DIRSET_AND_DIRCLR*/\n  111      }\n  112  }\n  113  \n  114: #if defined(FSL_FEATURE_GPIO_HAS_INTERRUPT) && FSL_FEATURE_GPIO_HAS_INTERRUPT\n  115  /*!\n  116:  * @brief Configures the gpio pin interrupt.\n  117   *\n  118:  * @param base GPIO base pointer.\n  119:  * @param port GPIO port number\n  120:  * @param pin GPIO pin number.\n  121:  * @param config GPIO pin interrupt configuration..\n  122   */\n  123: void GPIO_SetPinInterruptConfig(GPIO_Type *base, uint32_t port, uint32_t pin, gpio_interrupt_config_t *config)\n  124  {\n  125      base->INTEDG[port] = base->INTEDG[port] | (config->mode << pin);\n  ...\n  131   * @brief Enables multiple pins interrupt.\n  132   *\n  133:  * @param base GPIO base pointer.\n  134:  * @param port   GPIO port number.\n  135:  * @param index GPIO interrupt number.\n  136:  * @param mask GPIO pin number macro.\n  137   */\n  138: void GPIO_PortEnableInterrupts(GPIO_Type *base, uint32_t port, uint32_t index, uint32_t mask)\n  139  {\n  140:     if (kGPIO_InterruptA == index)\n  141      {\n  142          base->INTENA[port] = base->INTENA[port] | mask;\n  143      }\n  144:     else if (kGPIO_InterruptB == index)\n  145      {\n  146          base->INTENB[port] = base->INTENB[port] | mask;\n  ...\n  155   * @brief Disables multiple pins interrupt.\n  156   *\n  157:  * @param base GPIO base pointer.\n  158:  * @param port   GPIO port number.\n  159:  * @param index GPIO interrupt number.\n  160:  * @param mask GPIO pin number macro.\n  161   */\n  162: void GPIO_PortDisableInterrupts(GPIO_Type *base, uint32_t port, uint32_t index, uint32_t mask)\n  163  {\n  164:     if (kGPIO_InterruptA == index)\n  165      {\n  166          base->INTENA[port] = base->INTENA[port] & ~mask;\n  167      }\n  168:     else if (kGPIO_InterruptB == index)\n  169      {\n  170          base->INTENB[port] = base->INTENB[port] & ~mask;\n  ...\n  180   *        writing a 1 to the corresponding bit position.\n  181   *\n  182:  * @param base GPIO base pointer.\n  183:  * @param port GPIO port number.\n  184:  * @param index GPIO interrupt number.\n  185:  * @param mask GPIO pin number macro.\n  186   */\n  187: void GPIO_PortClearInterruptFlags(GPIO_Type *base, uint32_t port, uint32_t index, uint32_t mask)\n  188  {\n  189:     if (kGPIO_InterruptA == index)\n  190      {\n  191          base->INTSTATA[port] = mask;\n  192      }\n  193:     else if (kGPIO_InterruptB == index)\n  194      {\n  195          base->INTSTATB[port] = mask;\n  ...\n  204   * @ Read port interrupt status.\n  205   *\n  206:  * @param base GPIO base pointer.\n  207:  * @param port GPIO port number\n  208:  * @param index GPIO interrupt number.\n  209:  * @retval masked GPIO status value\n  210   */\n  211: uint32_t GPIO_PortGetInterruptStatus(GPIO_Type *base, uint32_t port, uint32_t index)\n  212  {\n  213      uint32_t status = 0U;\n  214  \n  215:     if (kGPIO_InterruptA == index)\n  216      {\n  217          status = base->INTSTATA[port];\n  218      }\n  219:     else if (kGPIO_InterruptB == index)\n  220      {\n  221          status = base->INTSTATB[port];\n  ...\n  232   * @brief Enables the specific pin interrupt.\n  233   *\n  234:  * @param base GPIO base pointer.\n  235:  * @param port   GPIO port number.\n  236:  * @param pin GPIO pin number.\n  237:  * @param index GPIO interrupt number.\n  238   */\n  239: void GPIO_PinEnableInterrupt(GPIO_Type *base, uint32_t port, uint32_t pin, uint32_t index)\n  240  {\n  241:     if (kGPIO_InterruptA == index)\n  242      {\n  243          base->INTENA[port] = base->INTENA[port] | (1U << pin);\n  244      }\n  245:     else if (kGPIO_InterruptB == index)\n  246      {\n  247          base->INTENB[port] = base->INTENB[port] | (1U << pin);\n  ...\n  256   * @brief Disables the specific pin interrupt.\n  257   *\n  258:  * @param base GPIO base pointer.\n  259:  * @param port   GPIO port number.\n  260:  * @param pin GPIO pin number.\n  261:  * @param index GPIO interrupt number.\n  262   */\n  263: void GPIO_PinDisableInterrupt(GPIO_Type *base, uint32_t port, uint32_t pin, uint32_t index)\n  264  {\n  265:     if (kGPIO_InterruptA == index)\n  266      {\n  267          base->INTENA[port] = base->INTENA[port] & ~(1U << pin);\n  268      }\n  269:     else if (kGPIO_InterruptB == index)\n  270      {\n  271          base->INTENB[port] = base->INTENB[port] & ~(1U << pin);\n  ...\n  281   *        writing a 1 to the corresponding bit position.\n  282   *\n  283:  * @param base GPIO base pointer.\n  284:  * @param port GPIO port number.\n  285:  * @param index GPIO interrupt number.\n  286:  * @param mask GPIO pin number macro.\n  287   */\n  288: void GPIO_PinClearInterruptFlag(GPIO_Type *base, uint32_t port, uint32_t pin, uint32_t index)\n  289  {\n  290:     if (kGPIO_InterruptA == index)\n  291      {\n  292          base->INTSTATA[port] = 1U << pin;\n  293      }\n  294:     else if (kGPIO_InterruptB == index)\n  295      {\n  296          base->INTSTATB[port] = 1U << pin;\n  ...\n  301      }\n  302  }\n  303: #endif /* FSL_FEATURE_GPIO_HAS_INTERRUPT */\n  304  \n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_gpio.h:\n    7   */\n    8  \n    9: #ifndef _LPC_GPIO_H_\n   10: #define _LPC_GPIO_H_\n   11  \n   12  #include \"fsl_common.h\"\n   13  \n   14  /*!\n   15:  * @addtogroup lpc_gpio\n   16   * @{\n   17   */\n   ..\n   25  /*! @name Driver version */\n   26  /*@{*/\n   27: /*! @brief LPC GPIO driver version 2.1.3. */\n   28: #define FSL_GPIO_DRIVER_VERSION (MAKE_VERSION(2, 1, 4))\n   29  /*@}*/\n   30  \n   31: /*! @brief LPC GPIO direction definition */\n   32: typedef enum _gpio_pin_direction\n   33  {\n   34:     kGPIO_DigitalInput = 0U,  /*!< Set current pin as digital input*/\n   35:     kGPIO_DigitalOutput = 1U, /*!< Set current pin as digital output*/\n   36: } gpio_pin_direction_t;\n   37  \n   38  /*!\n   39:  * @brief The GPIO pin configuration structure.\n   40   *\n   41   * Every pin can only be configured as either output pin or input pin at a time.\n   42   * If configured as a input pin, then leave the outputConfig unused.\n   43   */\n   44: typedef struct _gpio_pin_config\n   45  {\n   46:     gpio_pin_direction_t pinDirection; /*!< GPIO direction, input or output */\n   47      /* Output configurations, please ignore if configured as a input one */\n   48      uint8_t outputLogic; /*!< Set default output logic, no use in input */\n   49: } gpio_pin_config_t;\n   50  \n   51: #if (defined(FSL_FEATURE_GPIO_HAS_INTERRUPT) && FSL_FEATURE_GPIO_HAS_INTERRUPT)\n   52: #define GPIO_PIN_INT_LEVEL 0x00U\n   53: #define GPIO_PIN_INT_EDGE 0x01U\n   54  \n   55  #define PINT_PIN_INT_HIGH_OR_RISE_TRIGGER 0x00U\n   56  #define PINT_PIN_INT_LOW_OR_FALL_TRIGGER 0x01U\n   57  \n   58: /*! @brief GPIO Pin Interrupt enable mode */\n   59: typedef enum _gpio_pin_enable_mode\n   60  {\n   61:     kGPIO_PinIntEnableLevel = GPIO_PIN_INT_LEVEL, /*!< Generate Pin Interrupt on level mode */\n   62:     kGPIO_PinIntEnableEdge = GPIO_PIN_INT_EDGE    /*!< Generate Pin Interrupt on edge mode */\n   63: } gpio_pin_enable_mode_t;\n   64  \n   65: /*! @brief GPIO Pin Interrupt enable polarity */\n   66: typedef enum _gpio_pin_enable_polarity\n   67  {\n   68:     kGPIO_PinIntEnableHighOrRise =\n   69          PINT_PIN_INT_HIGH_OR_RISE_TRIGGER, /*!< Generate Pin Interrupt on high level or rising edge */\n   70:     kGPIO_PinIntEnableLowOrFall =\n   71          PINT_PIN_INT_LOW_OR_FALL_TRIGGER /*!< Generate Pin Interrupt on low level or falling edge */\n   72: } gpio_pin_enable_polarity_t;\n   73  \n   74: /*! @brief LPC GPIO interrupt index definition */\n   75: typedef enum _gpio_interrupt_index\n   76  {\n   77:     kGPIO_InterruptA = 0U, /*!< Set current pin as interrupt A*/\n   78:     kGPIO_InterruptB = 1U, /*!< Set current pin as interrupt B*/\n   79: } gpio_interrupt_index_t;\n   80  \n   81  /*! @brief Configures the interrupt generation condition. */\n   82: typedef struct _gpio_interrupt_config\n   83  {\n   84:     uint8_t mode;         /* The trigger mode of GPIO interrupts */\n   85:     uint8_t polarity;     /* The polarity of GPIO interrupts */\n   86: } gpio_interrupt_config_t;\n   87  #endif\n   88  \n   ..\n   95  #endif\n   96  \n   97: /*! @name GPIO Configuration */\n   98  /*@{*/\n   99  \n  100  /*!\n  101:  * @brief Initializes the GPIO peripheral.\n  102   *\n  103:  * This function ungates the GPIO clock.\n  104   *\n  105:  * @param base   GPIO peripheral base pointer.\n  106:  * @param port   GPIO port number.\n  107   */\n  108: void GPIO_PortInit(GPIO_Type *base, uint32_t port);\n  109  \n  110  /*!\n  111:  * @brief Initializes a GPIO pin used by the board.\n  112   *\n  113:  * To initialize the GPIO, define a pin configuration, either input or output, in the user file.\n  114:  * Then, call the GPIO_PinInit() function.\n  115   *\n  116   * This is an example to define an input pin or output pin configuration:\n  117   * @code\n  118   * // Define a digital input pin configuration,\n  119:  * gpio_pin_config_t config =\n  120   * {\n  121:  *   kGPIO_DigitalInput,\n  122   *   0,\n  123   * }\n  124   * //Define a digital output pin configuration,\n  125:  * gpio_pin_config_t config =\n  126   * {\n  127:  *   kGPIO_DigitalOutput,\n  128   *   0,\n  129   * }\n  130   * @endcode\n  131   *\n  132:  * @param base   GPIO peripheral base pointer(Typically GPIO)\n  133:  * @param port   GPIO port number\n  134:  * @param pin    GPIO pin number\n  135:  * @param config GPIO pin configuration pointer\n  136   */\n  137: void GPIO_PinInit(GPIO_Type *base, uint32_t port, uint32_t pin, const gpio_pin_config_t *config);\n  138  \n  139  /*@}*/\n  140  \n  141: /*! @name GPIO Output Operations */\n  142  /*@{*/\n  143  \n  144  /*!\n  145:  * @brief Sets the output level of the one GPIO pin to the logic 1 or 0.\n  146   *\n  147:  * @param base    GPIO peripheral base pointer(Typically GPIO)\n  148:  * @param port   GPIO port number\n  149:  * @param pin    GPIO pin number\n  150:  * @param output  GPIO pin output logic level.\n  151   *        - 0: corresponding pin output low-logic level.\n  152   *        - 1: corresponding pin output high-logic level.\n  153   */\n  154: static inline void GPIO_PinWrite(GPIO_Type *base, uint32_t port, uint32_t pin, uint8_t output)\n  155  {\n  156      base->B[port][pin] = output;\n  ...\n  158  \n  159  /*@}*/\n  160: /*! @name GPIO Input Operations */\n  161  /*@{*/\n  162  \n  163  /*!\n  164:  * @brief Reads the current input value of the GPIO PIN.\n  165   *\n  166:  * @param base GPIO peripheral base pointer(Typically GPIO)\n  167:  * @param port   GPIO port number\n  168:  * @param pin    GPIO pin number\n  169:  * @retval GPIO port input value\n  170   *        - 0: corresponding pin input low-logic level.\n  171   *        - 1: corresponding pin input high-logic level.\n  172   */\n  173: static inline uint32_t GPIO_PinRead(GPIO_Type *base, uint32_t port, uint32_t pin)\n  174  {\n  175      return (uint32_t)base->B[port][pin];\n  ...\n  179  \n  180  /*!\n  181:  * @brief Sets the output level of the multiple GPIO pins to the logic 1.\n  182   *\n  183:  * @param base GPIO peripheral base pointer(Typically GPIO)\n  184:  * @param port GPIO port number\n  185:  * @param mask GPIO pin number macro\n  186   */\n  187: static inline void GPIO_PortSet(GPIO_Type *base, uint32_t port, uint32_t mask)\n  188  {\n  189      base->SET[port] = mask;\n  ...\n  191  \n  192  /*!\n  193:  * @brief Sets the output level of the multiple GPIO pins to the logic 0.\n  194   *\n  195:  * @param base GPIO peripheral base pointer(Typically GPIO)\n  196:  * @param port GPIO port number\n  197:  * @param mask GPIO pin number macro\n  198   */\n  199: static inline void GPIO_PortClear(GPIO_Type *base, uint32_t port, uint32_t mask)\n  200  {\n  201      base->CLR[port] = mask;\n  ...\n  203  \n  204  /*!\n  205:  * @brief Reverses current output logic of the multiple GPIO pins.\n  206   *\n  207:  * @param base GPIO peripheral base pointer(Typically GPIO)\n  208:  * @param port GPIO port number\n  209:  * @param mask GPIO pin number macro\n  210   */\n  211: static inline void GPIO_PortToggle(GPIO_Type *base, uint32_t port, uint32_t mask)\n  212  {\n  213      base->NOT[port] = mask;\n  ...\n  217  \n  218  /*!\n  219:  * @brief Reads the current input value of the whole GPIO port.\n  220   *\n  221:  * @param base GPIO peripheral base pointer(Typically GPIO)\n  222:  * @param port GPIO port number\n  223   */\n  224: static inline uint32_t GPIO_PortRead(GPIO_Type *base, uint32_t port)\n  225  {\n  226      return (uint32_t)base->PIN[port];\n  ...\n  228  \n  229  /*@}*/\n  230: /*! @name GPIO Mask Operations */\n  231  /*@{*/\n  232  \n  ...\n  234   * @brief Sets port mask, 0 - enable pin, 1 - disable pin.\n  235   *\n  236:  * @param base GPIO peripheral base pointer(Typically GPIO)\n  237:  * @param port GPIO port number\n  238:  * @param mask GPIO pin number macro\n  239   */\n  240: static inline void GPIO_PortMaskedSet(GPIO_Type *base, uint32_t port, uint32_t mask)\n  241  {\n  242      base->MASK[port] = mask;\n  ...\n  244  \n  245  /*!\n  246:  * @brief Sets the output level of the masked GPIO port. Only pins enabled by GPIO_SetPortMask() will be affected.\n  247   *\n  248:  * @param base    GPIO peripheral base pointer(Typically GPIO)\n  249:  * @param port   GPIO port number\n  250:  * @param output  GPIO port output value.\n  251   */\n  252: static inline void GPIO_PortMaskedWrite(GPIO_Type *base, uint32_t port, uint32_t output)\n  253  {\n  254      base->MPIN[port] = output;\n  ...\n  256  \n  257  /*!\n  258:  * @brief Reads the current input value of the masked GPIO port. Only pins enabled by GPIO_SetPortMask() will be\n  259   * affected.\n  260   *\n  261:  * @param base   GPIO peripheral base pointer(Typically GPIO)\n  262:  * @param port   GPIO port number\n  263:  * @retval       masked GPIO port value\n  264   */\n  265: static inline uint32_t GPIO_PortMaskedRead(GPIO_Type *base, uint32_t port)\n  266  {\n  267      return (uint32_t)base->MPIN[port];\n  268  }\n  269  \n  270: #if defined(FSL_FEATURE_GPIO_HAS_INTERRUPT) && FSL_FEATURE_GPIO_HAS_INTERRUPT\n  271  /*!\n  272:  * @brief Configures the gpio pin interrupt.\n  273   *\n  274:  * @param base GPIO base pointer.\n  275:  * @param port GPIO port number\n  276:  * @param pin GPIO pin number.\n  277:  * @param config GPIO pin interrupt configuration..\n  278   */\n  279: void GPIO_SetPinInterruptConfig(GPIO_Type *base, uint32_t port, uint32_t pin, gpio_interrupt_config_t *config);\n  280  \n  281  /*!\n  282   * @brief Enables multiple pins interrupt.\n  283   *\n  284:  * @param base GPIO base pointer.\n  285:  * @param port GPIO port number.\n  286:  * @param index GPIO interrupt number.\n  287:  * @param mask GPIO pin number macro.\n  288   */\n  289: void GPIO_PortEnableInterrupts(GPIO_Type *base, uint32_t port, uint32_t index, uint32_t mask);\n  290  \n  291  /*!\n  292   * @brief Disables multiple pins interrupt.\n  293   *\n  294:  * @param base GPIO base pointer.\n  295:  * @param port GPIO port number.\n  296:  * @param index GPIO interrupt number.\n  297:  * @param mask GPIO pin number macro.\n  298   */\n  299: void GPIO_PortDisableInterrupts(GPIO_Type *base, uint32_t port, uint32_t index, uint32_t mask);\n  300  \n  301  /*!\n  ...\n  303   *        writing a 1 to the corresponding bit position.\n  304   *\n  305:  * @param base GPIO base pointer.\n  306:  * @param port   GPIO port number.\n  307:  * @param index GPIO interrupt number.\n  308:  * @param mask GPIO pin number macro.\n  309   */\n  310: void GPIO_PortClearInterruptFlags(GPIO_Type *base, uint32_t port, uint32_t index, uint32_t mask);\n  311  \n  312  /*!\n  313   * @ Read port interrupt status.\n  314   *\n  315:  * @param base GPIO base pointer.\n  316:  * @param port GPIO port number\n  317:  * @param index GPIO interrupt number.\n  318:  * @retval masked GPIO status value\n  319   */\n  320: uint32_t GPIO_PortGetInterruptStatus(GPIO_Type *base, uint32_t port, uint32_t index);\n  321  \n  322  /*!\n  323   * @brief Enables the specific pin interrupt.\n  324   *\n  325:  * @param base GPIO base pointer.\n  326:  * @param port GPIO port number.\n  327:  * @param pin GPIO pin number.\n  328:  * @param index GPIO interrupt number.\n  329   */\n  330: void GPIO_PinEnableInterrupt(GPIO_Type *base, uint32_t port, uint32_t pin, uint32_t index);\n  331  \n  332  /*!\n  333   * @brief Disables the specific pin interrupt.\n  334   *\n  335:  * @param base GPIO base pointer.\n  336:  * @param port GPIO port number.\n  337:  * @param pin GPIO pin number.\n  338:  * @param index GPIO interrupt number.\n  339   */\n  340: void GPIO_PinDisableInterrupt(GPIO_Type *base, uint32_t port, uint32_t pin, uint32_t index);\n  341  \n  342  /*!\n  ...\n  344   *        writing a 1 to the corresponding bit position.\n  345   *\n  346:  * @param base GPIO base pointer.\n  347:  * @param port GPIO port number.\n  348:  * @param pin GPIO pin number.\n  349:  * @param index GPIO interrupt number.\n  350   */\n  351: void GPIO_PinClearInterruptFlag(GPIO_Type *base, uint32_t port, uint32_t pin, uint32_t index);\n  352  \n  353: #endif /* FSL_FEATURE_GPIO_HAS_INTERRUPT */\n  354  \n  355  /*@}*/\n  ...\n  363   */\n  364  \n  365: #endif /* _LPC_GPIO_H_*/\n  366  \n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_iocon.h:\n   47   * @note See the User Manual for specific modes and functions supported by the various pins.\n   48   */\n   49: #if defined(IOCON_PIO_MODE_SHIFT)\n   50: #define IOCON_MODE_INACT (0x0 << IOCON_PIO_MODE_SHIFT)    /*!< No addition pin function */\n   51: #define IOCON_MODE_PULLDOWN (0x1 << IOCON_PIO_MODE_SHIFT) /*!< Selects pull-down function */\n   52: #define IOCON_MODE_PULLUP (0x2 << IOCON_PIO_MODE_SHIFT)   /*!< Selects pull-up function */\n   53: #define IOCON_MODE_REPEATER (0x3 << IOCON_PIO_MODE_SHIFT) /*!< Selects pin repeater function */\n   54  #endif\n   55: #if defined(IOCON_PIO_HYS_SHIFT)\n   56: #define IOCON_HYS_EN (0x1 << IOCON_PIO_HYS_SHIFT) /*!< Enables hysteresis */\n   57  #endif\n   58: #if defined(IOCON_PIO_INV_SHIFT)\n   59: #define IOCON_INV_EN (0x1 << IOCON_PIO_INV_SHIFT) /*!< Enables invert function on input */\n   60  #endif\n   61: #if defined(IOCON_PIO_I2CMODE_SHIFT)\n   62: #define IOCON_STDI2C_EN (0x0 << IOCON_PIO_I2CMODE_SHIFT) /*!< I2C standard mode/fast-mode */\n   63: #define IOCON_STDGPIO_EN                                                                                           \\\n   64:     (0x1 << IOCON_PIO_I2CMODE_SHIFT) /*!< Standard GPIO functionality. Requires external pull-up for GPIO output \\ \\\n   65                                           function */\n   66: #define IOCON_FASTI2C_EN (0x2 << IOCON_PIO_I2CMODE_SHIFT) /*!< I2C Fast-mode Plus */\n   67  #endif\n   68: #if defined(IOCON_PIO_OD_SHIFT)\n   69: #define IOCON_OPENDRAIN_EN (0x1 << IOCON_PIO_OD_SHIFT) /*!< Enables open-drain function */\n   70  #endif\n   71: #if defined(IOCON_PIO_S_MODE_SHIFT)\n   72: #define IOCON_S_MODE_0CLK (0x0 << IOCON_PIO_S_MODE_SHIFT) /*!< Bypass input filter */\n   73  #define IOCON_S_MODE_1CLK                                                                        \\\n   74:     (0x1 << IOCON_PIO_S_MODE_SHIFT) /*!< Input pulses shorter than 1 filter clock are rejected \\ \\\n   75                                       */\n   76  #define IOCON_S_MODE_2CLK                                                                         \\\n   77:     (0x2 << IOCON_PIO_S_MODE_SHIFT) /*!< Input pulses shorter than 2 filter clock2 are rejected \\ \\\n   78                                       */\n   79  #define IOCON_S_MODE_3CLK                                                                         \\\n   80:     (0x3 << IOCON_PIO_S_MODE_SHIFT) /*!< Input pulses shorter than 3 filter clock2 are rejected \\ \\\n   81                                       */\n   82  #endif\n   83: #if defined(IOCON_PIO_CLK_DIV_SHIFT)\n   84  #define IOCON_CLKDIV(div) \\\n   85      ((div)                \\\n   86:      << IOCON_PIO_CLK_DIV_SHIFT) /*!< Select peripheral clock divider for input filter sampling clock, 2^n, n=0-6 */\n   87  #endif\n   88: #if defined(IOCON_PIO_DACMODE_SHIFT)\n   89: #define IOCON_DAC_MODE_EN (0x1 << IOCON_PIO_DACMODE_SHIFT) /*!< DAC mode enable */\n   90  #endif\n   91  #if defined(__cplusplus)\n   ..\n   96   * @brief   Sets I/O Control pin mux\n   97   * @param   base        : The base of IOCON peripheral on the chip\n   98:  * @param   ionumber    : GPIO number to mux\n   99   * @param   modefunc    : OR'ed values of type IOCON_*\n  100   * @return  Nothing\n  ...\n  102  __STATIC_INLINE void IOCON_PinMuxSet(IOCON_Type *base, uint8_t ionumber, uint32_t modefunc)\n  103  {\n  104:     base->PIO[ionumber] = modefunc;\n  105  }\n  106  \n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_power.h:\n   56  enum _power_dpd_wakeup_pin\n   57  {\n   58:     KPmu_Dpd_En_Pio0_15 = (uint32_t)(1 << 0),\n   59:     KPmu_Dpd_En_Pio0_9 = (uint32_t)(1 << 1),\n   60:     KPmu_Dpd_En_Pio0_8 = (uint32_t)(1 << 2),\n   61:     KPmu_Dpd_En_Pio0_17 = (uint32_t)(1 << 3),\n   62:     KPmu_Dpd_En_Pio0_13 = (uint32_t)(1 << 4),\n   63:     KPmu_Dpd_En_Pio0_4 = (uint32_t)(1 << 5),\n   64:     KPmu_Dpd_En_Pio0_11 = (uint32_t)(1 << 6),\n   65:     KPmu_Dpd_En_Pio0_10 = (uint32_t)(1 << 7),\n   66  };\n   67  \n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_reset.h:\n   39      kFLASH_RST_N_SHIFT_RSTn = 0 | 4U,    /**< Flash controller reset control */\n   40      kI2C0_RST_N_SHIFT_RSTn = 0 | 5U,     /**< I2C0 reset control */\n   41:     kGPIO0_RST_N_SHIFT_RSTn = 0 | 6U,    /**< GPIO0 reset control */\n   42      kSWM_RST_N_SHIFT_RSTn = 0 | 7U,      /**< SWM reset control */\n   43      kWKT_RST_N_SHIFT_RSTn = 0 | 9U,      /**< Self-wake-up timer(WKT) reset control */\n   ..\n   53      kCTIMER0_RST_N_SHIFT_RSTn = 0 | 25U, /**< CTIMER0 reset control */\n   54      kDAC0_RST_N_SHIFT_RSTn = 0 | 27U,    /**< DAC0 reset control */\n   55:     kGPIOINT_RST_N_SHIFT_RSTn = 0 | 28U, /**< GPIOINT reset control */\n   56  \n   57      kCAPT_RST_N_SHIFT_RSTn = 65536 | 0U, /**< Capacitive Touch reset control */\n   ..\n   69          kI2C0_RST_N_SHIFT_RSTn, kI2C1_RST_N_SHIFT_RSTn \\\n   70      } /* Reset bits for I2C peripheral */\n   71: #define GPIO_RSTS_N             \\\n   72      {                           \\\n   73:         kGPIO0_RST_N_SHIFT_RSTn \\\n   74:     } /* Reset bits for GPIO peripheral */\n   75  #define SWM_RSTS_N            \\\n   76      {                         \\\n   ..\n  117          kDAC0_RST_N_SHIFT_RSTn \\\n  118      } /* Reset bits for DAC peripheral */\n  119: #define GPIOINT_RSTS_N            \\\n  120      {                             \\\n  121:         kGPIOINT_RST_N_SHIFT_RSTn \\\n  122:     } /* Reset bits for GPIOINT peripheral */\n  123  #define CAPT_RSTS_N            \\\n  124      {                          \\\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_swm.c:\n   29   * brief Assignment of digital peripheral functions to pins.\n   30   *\n   31:  * This function will selects a pin (designated by its GPIO port and\n   32   * bit numbers) to a function.\n   33   *\n   34   * param base SWM peripheral base address.\n   35   * param func any function name that is movable.\n   36:  * param swm_port_pin any pin which has a GPIO port number and bit number.\n   37   */\n   38  void SWM_SetMovablePinSelect(SWM_Type *base, swm_select_movable_t func, swm_port_pin_type_t swm_port_pin)\n   ..\n   59   * brief Assignment of digital peripheral functions to pins.\n   60   *\n   61:  * This function will selects a pin (designated by its GPIO port and\n   62   * bit numbers) to a function.\n   63   *\n   64   * param base SWM peripheral base address.\n   65   * param func any function name that is movable.\n   66:  * param swm_port_pin any pin which has a GPIO port number and bit number.\n   67   */\n   68  void SWM_SetFixedMovablePinSelect(SWM_Type *base,\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_swm.h:\n   38   * @brief Assignment of digital peripheral functions to pins.\n   39   *\n   40:  * This function will selects a pin (designated by its GPIO port and\n   41   * bit numbers) to a function.\n   42   *\n   43   * @param base SWM peripheral base address.\n   44   * @param func any function name that is movable.\n   45:  * @param swm_port_pin any pin which has a GPIO port number and bit number.\n   46   */\n   47  void SWM_SetMovablePinSelect(SWM_Type *base, swm_select_movable_t func, swm_port_pin_type_t swm_port_pin);\n   ..\n   51   * @brief Assignment of digital peripheral functions to pins.\n   52   *\n   53:  * This function will selects a pin (designated by its GPIO port and\n   54   * bit numbers) to a function.\n   55   *\n   56   * @param base SWM peripheral base address.\n   57   * @param func any function name that is movable.\n   58:  * @param swm_port_pin any pin which has a GPIO port number and bit number.\n   59   */\n   60  void SWM_SetFixedMovablePinSelect(SWM_Type *base,\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_swm_connections.h:\n  182      kSWM_ACMP_OUT = 22U,      /*!< Movable function as ACMP_OUT. */\n  183      kSWM_CLKOUT = 23U,        /*!< Movable function as CLKOUT. */\n  184:     kSWM_GPIO_INT_BMAT = 24U, /*!< Movable function as GPIO_INT_BMAT. */\n  185  \n  186      kSWM_LVLSHFT_IN0 = 25U,  /*!< Movable function as LVLSHFT_IN0. */\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_syscon_connections.h:\n   38  {\n   39      /*!< Pin Interrupt. */\n   40:     kSYSCON_GpioPort0Pin0ToPintsel = 0U + (PINTSEL_ID << SYSCON_SHIFT),\n   41:     kSYSCON_GpioPort0Pin1ToPintsel = 1U + (PINTSEL_ID << SYSCON_SHIFT),\n   42:     kSYSCON_GpioPort0Pin2ToPintsel = 2U + (PINTSEL_ID << SYSCON_SHIFT),\n   43:     kSYSCON_GpioPort0Pin3ToPintsel = 3U + (PINTSEL_ID << SYSCON_SHIFT),\n   44:     kSYSCON_GpioPort0Pin4ToPintsel = 4U + (PINTSEL_ID << SYSCON_SHIFT),\n   45:     kSYSCON_GpioPort0Pin5ToPintsel = 5U + (PINTSEL_ID << SYSCON_SHIFT),\n   46  \n   47:     kSYSCON_GpioPort0Pin7ToPintsel = 7U + (PINTSEL_ID << SYSCON_SHIFT),\n   48:     kSYSCON_GpioPort0Pin8ToPintsel = 8U + (PINTSEL_ID << SYSCON_SHIFT),\n   49:     kSYSCON_GpioPort0Pin9ToPintsel = 9U + (PINTSEL_ID << SYSCON_SHIFT),\n   50:     kSYSCON_GpioPort0Pin10ToPintsel = 10U + (PINTSEL_ID << SYSCON_SHIFT),\n   51:     kSYSCON_GpioPort0Pin11ToPintsel = 11U + (PINTSEL_ID << SYSCON_SHIFT),\n   52:     kSYSCON_GpioPort0Pin12ToPintsel = 12U + (PINTSEL_ID << SYSCON_SHIFT),\n   53:     kSYSCON_GpioPort0Pin13ToPintsel = 13U + (PINTSEL_ID << SYSCON_SHIFT),\n   54:     kSYSCON_GpioPort0Pin14ToPintsel = 14U + (PINTSEL_ID << SYSCON_SHIFT),\n   55:     kSYSCON_GpioPort0Pin15ToPintsel = 15U + (PINTSEL_ID << SYSCON_SHIFT),\n   56:     kSYSCON_GpioPort0Pin16ToPintsel = 16U + (PINTSEL_ID << SYSCON_SHIFT),\n   57:     kSYSCON_GpioPort0Pin17ToPintsel = 17U + (PINTSEL_ID << SYSCON_SHIFT),\n   58:     kSYSCON_GpioPort0Pin18ToPintsel = 18U + (PINTSEL_ID << SYSCON_SHIFT),\n   59:     kSYSCON_GpioPort0Pin19ToPintsel = 19U + (PINTSEL_ID << SYSCON_SHIFT),\n   60:     kSYSCON_GpioPort0Pin20ToPintsel = 20U + (PINTSEL_ID << SYSCON_SHIFT),\n   61:     kSYSCON_GpioPort0Pin21ToPintsel = 21U + (PINTSEL_ID << SYSCON_SHIFT),\n   62:     kSYSCON_GpioPort0Pin22ToPintsel = 22U + (PINTSEL_ID << SYSCON_SHIFT),\n   63:     kSYSCON_GpioPort0Pin23ToPintsel = 23U + (PINTSEL_ID << SYSCON_SHIFT),\n   64:     kSYSCON_GpioPort0Pin24ToPintsel = 24U + (PINTSEL_ID << SYSCON_SHIFT),\n   65:     kSYSCON_GpioPort0Pin25ToPintsel = 25U + (PINTSEL_ID << SYSCON_SHIFT),\n   66:     kSYSCON_GpioPort0Pin26ToPintsel = 26U + (PINTSEL_ID << SYSCON_SHIFT),\n   67:     kSYSCON_GpioPort0Pin27ToPintsel = 27U + (PINTSEL_ID << SYSCON_SHIFT),\n   68:     kSYSCON_GpioPort0Pin28ToPintsel = 28U + (PINTSEL_ID << SYSCON_SHIFT),\n   69:     kSYSCON_GpioPort0Pin29ToPintsel = 29U + (PINTSEL_ID << SYSCON_SHIFT),\n   70:     kSYSCON_GpioPort0Pin30ToPintsel = 30U + (PINTSEL_ID << SYSCON_SHIFT),\n   71  } syscon_connection_t;\n   72  \n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/source/capt_basic.c:\n   13  #include <stdbool.h>\n   14  #include \"fsl_power.h\"\n   15: #include \"fsl_gpio.h\"\n   16  /*******************************************************************************\n   17   * Definitions\n   ..\n   43  void BOARD_InitLED(void)\n   44  {\n   45:     GPIO_PortInit(GPIO, 0U);\n   46:     // GPIO_PinInit(GPIO, 0U, 20U, &(gpio_pin_config_t){kGPIO_DigitalOutput, 0U});\n   47:     // GPIO_PinInit(GPIO, 0U, 18U, &(gpio_pin_config_t){kGPIO_DigitalOutput, 0U});\n   48:     // GPIO_PinInit(GPIO, 0U, 15U, &(gpio_pin_config_t){kGPIO_DigitalOutput, 0U});\n   49:     // GPIO_PinInit(GPIO, 0U, 8U, &(gpio_pin_config_t){kGPIO_DigitalOutput, 0U});\n   50:     // GPIO_PinInit(GPIO, 0U, 9U, &(gpio_pin_config_t){kGPIO_DigitalOutput, 0U});\n   51  \n   52:     GPIO_PinInit(GPIO, 0U, 18, &(gpio_pin_config_t){kGPIO_DigitalOutput, 0U});  //LED 3\n   53:     GPIO_PinInit(GPIO, 0U, 16, &(gpio_pin_config_t){kGPIO_DigitalOutput, 0U});  //LED 2\n   54:     GPIO_PinInit(GPIO, 0U, 17, &(gpio_pin_config_t){kGPIO_DigitalOutput, 0U});  //LED 1\n   55:     GPIO_PinInit(GPIO, 0U, 13, &(gpio_pin_config_t){kGPIO_DigitalOutput, 0U});  //LED 0\n   56  }\n   57  \n   ..\n   61      {\n   62          case 0U:\n   63:             GPIO_PortClear(GPIO, 0U, 1U << 18);\n   64              break;\n   65          case 1U:\n   66:             GPIO_PortClear(GPIO, 0U, 1U << 16);\n   67              break;\n   68          case 2U:\n   69:             GPIO_PortClear(GPIO, 0U, 1U << 17);\n   70              break;\n   71          case 3U:\n   72:             GPIO_PortClear(GPIO, 0U, 1U << 13);\n   73              break;\n   74          // case 4U:\n   75:         //     GPIO_PortClear(GPIO, 0U, 1U << 9U);\n   76          //     break;\n   77      }\n   ..\n   80  void BOARD_LED_OFF(void)\n   81  {\n   82:     // GPIO_PortSet(GPIO, 0U, 1U << 20U);\n   83:     // GPIO_PortSet(GPIO, 0U, 1U << 18U);\n   84:     // GPIO_PortSet(GPIO, 0U, 1U << 15U);\n   85:     // GPIO_PortSet(GPIO, 0U, 1U << 8U);\n   86:     // GPIO_PortSet(GPIO, 0U, 1U << 9U);\n   87:     GPIO_PortSet(GPIO, 0U, 1U << 18);   //LED3\n   88:     GPIO_PortSet(GPIO, 0U, 1U << 16);   //LED2\n   89:     GPIO_PortSet(GPIO, 0U, 1U << 17);   //LED1\n   90:     GPIO_PortSet(GPIO, 0U, 1U << 13);   //LED0\n   91  }\n   92  \n\n988 matches across 19 files\n\n\nSearching 57 files for \"PIO\" (whole word)\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/device/LPC804.h:\n 2404  /** IOCON - Register Layout Typedef */\n 2405  typedef struct {\n 2406:   __IO uint32_t PIO[30];                           /**< Digital I/O control for pins PIO0_17..Digital I/O control for pins PIO0_18, array offset: 0x0, array step: 0x4 */\n 2407  } IOCON_Type;\n 2408  \n ....\n 2416   */\n 2417  \n 2418: /*! @name PIO - Digital I/O control for pins PIO0_17..Digital I/O control for pins PIO0_18 */\n 2419  /*! @{ */\n 2420  #define IOCON_PIO_MODE_MASK                      (0x18U)\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_clock.c:\n  292  {\n  293      /* remove the pull up and pull down resistors in the IOCON */\n  294:     IOCON->PIO[IOCON_INDEX_PIO0_1] &= ~IOCON_PIO_MODE_MASK;\n  295      /* enable the 1 bit functions for CLKIN */\n  296      SWM0->PINENABLE0 &= ~SWM_PINENABLE0_CLKIN_MASK;\n\n/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/drivers/fsl_iocon.h:\n  102  __STATIC_INLINE void IOCON_PinMuxSet(IOCON_Type *base, uint8_t ionumber, uint32_t modefunc)\n  103  {\n  104:     base->PIO[ionumber] = modefunc;\n  105  }\n  106  \n\n4 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 100228,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "capt_basic/drivers/fsl_iocon.h",
			"settings":
			{
				"buffer_size": 4578,
				"line_ending": "Unix"
			}
		},
		{
			"file": "capt_basic/device/LPC804.h",
			"settings":
			{
				"buffer_size": 360896,
				"line_ending": "Unix"
			}
		},
		{
			"file": "capt_basic/drivers/fsl_swm.c",
			"settings":
			{
				"buffer_size": 3823,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/board/pin_mux.c",
		"/home/church/PCBs/HAD_CLOCK_191211/README.md",
		"/home/church/mcuxpresso/01/SDKPackages/SDK_/boards/lpcxpresso804/demo_apps/led_blinky/readme.md",
		"/home/church/mcuxpresso/01/SDKPackages/SDK_/boards/lpcxpresso804/demo_apps/led_blinky/board.c",
		"/home/church/mcuxpresso/01/SDKPackages/SDK_/boards/lpcxpresso804/demo_apps/led_blinky/board.h",
		"/home/church/LPC 804/SDK_/devices/LPC804/drivers/fsl_common.h",
		"/home/church/LPC 804/SDK_/devices/LPC804/drivers/fsl_common.c",
		"/home/church/mcuxpresso/01/SDKPackages/SDK_/boards/lpcxpresso804/demo_apps/led_blinky/clock_config.c",
		"/home/church/mcuxpresso/01/SDKPackages/SDK_/boards/lpcxpresso804/demo_apps/led_blinky/clock_config.h",
		"/home/church/mcuxpresso/01/SDKPackages/SDK_/boards/lpcxpresso804/demo_apps/led_blinky/led_blinky.bin",
		"/home/church/mcuxpresso/01/SDKPackages/SDK_/boards/lpcxpresso804/demo_apps/led_blinky/led_blinky.c",
		"/home/church/mcuxpresso/01/SDKPackages/SDK_/boards/lpcxpresso804/demo_apps/led_blinky/led_blinky.xml",
		"/home/church/mcuxpresso/01/SDKPackages/SDK_/boards/lpcxpresso804/demo_apps/led_blinky/pin_mux.c",
		"/home/church/mcuxpresso/01/SDKPackages/SDK_/boards/lpcxpresso804/demo_apps/led_blinky/pin_mux.h",
		"/home/church/mcuxpresso/01/SDKPackages/SDK_/boards/lpcxpresso804/demo_apps/led_blinky/readme.txt",
		"/home/church/mtg_python/land_rename.py"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 98.0,
		"where_history":
		[
			"/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic",
			"/home/church/PCBs/HAD_CLOCK_191211/firmware/Capt_testboard_code/capt_testboard/capt_basic/source",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"PIO",
			"IOCON_PinMuxSet",
			"IOCON_INDEX_PIO0_17",
			"kSWM_PortPin_P0_12",
			"SWM_SetMovablePinSelect",
			"kSWM_CAPT_X0",
			"BOARD_InitPins",
			"kCAPT_X0Pin",
			"GPIO"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "capt_basic/source/capt_basic.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9120,
						"regions":
						{
						},
						"selection":
						[
							[
								5294,
								5294
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 405.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "capt_basic/drivers/fsl_capt.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14007,
						"regions":
						{
						},
						"selection":
						[
							[
								708,
								708
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 158.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "capt_basic/drivers/fsl_swm_connections.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12248,
						"regions":
						{
						},
						"selection":
						[
							[
								4562,
								4562
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1253.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "capt_basic/board/pin_mux.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25280,
						"regions":
						{
						},
						"selection":
						[
							[
								24949,
								24949
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5762.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 100228,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										303,
										314
									],
									[
										712,
										723
									],
									[
										1183,
										1194
									],
									[
										1569,
										1580
									],
									[
										1998,
										2012
									],
									[
										2144,
										2158
									],
									[
										2430,
										2444
									],
									[
										2734,
										2748
									],
									[
										2955,
										2969
									],
									[
										3238,
										3252
									],
									[
										3593,
										3605
									],
									[
										3963,
										3975
									],
									[
										4419,
										4442
									],
									[
										4549,
										4572
									],
									[
										4677,
										4700
									],
									[
										4803,
										4826
									],
									[
										4929,
										4952
									],
									[
										5055,
										5078
									],
									[
										5181,
										5204
									],
									[
										5306,
										5329
									],
									[
										5431,
										5454
									],
									[
										5769,
										5792
									],
									[
										6128,
										6151
									],
									[
										6646,
										6664
									],
									[
										6986,
										7004
									],
									[
										7553,
										7572
									],
									[
										7943,
										7962
									],
									[
										7964,
										7983
									],
									[
										8288,
										8307
									],
									[
										8735,
										8750
									],
									[
										9050,
										9065
									],
									[
										9366,
										9381
									],
									[
										9682,
										9697
									],
									[
										9996,
										10011
									],
									[
										10308,
										10323
									],
									[
										10620,
										10635
									],
									[
										10933,
										10948
									],
									[
										11249,
										11264
									],
									[
										11570,
										11585
									],
									[
										11886,
										11901
									],
									[
										12201,
										12216
									],
									[
										12504,
										12519
									],
									[
										12706,
										12721
									],
									[
										13384,
										13387
									],
									[
										14149,
										14152
									],
									[
										14181,
										14184
									],
									[
										14535,
										14538
									],
									[
										14707,
										14710
									],
									[
										14743,
										14746
									],
									[
										14748,
										14751
									],
									[
										14798,
										14801
									],
									[
										14842,
										14845
									],
									[
										14882,
										14885
									],
									[
										15029,
										15032
									],
									[
										15059,
										15062
									],
									[
										15081,
										15084
									],
									[
										15130,
										15133
									],
									[
										15159,
										15162
									],
									[
										15181,
										15184
									],
									[
										15208,
										15211
									],
									[
										15246,
										15249
									],
									[
										15266,
										15269
									],
									[
										15443,
										15446
									],
									[
										15474,
										15477
									],
									[
										15496,
										15499
									],
									[
										15582,
										15585
									],
									[
										15810,
										15813
									],
									[
										15839,
										15842
									],
									[
										15861,
										15864
									],
									[
										15946,
										15949
									],
									[
										16150,
										16153
									],
									[
										16182,
										16185
									],
									[
										16204,
										16207
									],
									[
										16266,
										16269
									],
									[
										16371,
										16374
									],
									[
										16406,
										16409
									],
									[
										16411,
										16414
									],
									[
										16460,
										16463
									],
									[
										16503,
										16506
									],
									[
										16542,
										16545
									],
									[
										16601,
										16604
									],
									[
										16630,
										16633
									],
									[
										16635,
										16638
									],
									[
										16678,
										16681
									],
									[
										16715,
										16718
									],
									[
										16748,
										16751
									],
									[
										16932,
										16935
									],
									[
										16961,
										16964
									],
									[
										16982,
										16985
									],
									[
										17030,
										17033
									],
									[
										17058,
										17061
									],
									[
										17079,
										17082
									],
									[
										17105,
										17108
									],
									[
										17143,
										17146
									],
									[
										17163,
										17166
									],
									[
										17338,
										17341
									],
									[
										17368,
										17371
									],
									[
										17389,
										17392
									],
									[
										17474,
										17477
									],
									[
										17698,
										17701
									],
									[
										17726,
										17729
									],
									[
										17747,
										17750
									],
									[
										17831,
										17834
									],
									[
										18031,
										18034
									],
									[
										18062,
										18065
									],
									[
										18083,
										18086
									],
									[
										18144,
										18147
									],
									[
										18246,
										18249
									],
									[
										18280,
										18283
									],
									[
										18285,
										18288
									],
									[
										18333,
										18336
									],
									[
										18375,
										18378
									],
									[
										18413,
										18416
									],
									[
										18554,
										18557
									],
									[
										18582,
										18585
									],
									[
										18602,
										18605
									],
									[
										18649,
										18652
									],
									[
										18676,
										18679
									],
									[
										18696,
										18699
									],
									[
										18721,
										18724
									],
									[
										18759,
										18762
									],
									[
										18779,
										18782
									],
									[
										18952,
										18955
									],
									[
										18981,
										18984
									],
									[
										19001,
										19004
									],
									[
										19085,
										19088
									],
									[
										19305,
										19308
									],
									[
										19332,
										19335
									],
									[
										19352,
										19355
									],
									[
										19435,
										19438
									],
									[
										19631,
										19634
									],
									[
										19661,
										19664
									],
									[
										19681,
										19684
									],
									[
										19741,
										19744
									],
									[
										19817,
										19820
									],
									[
										19847,
										19850
									],
									[
										19852,
										19855
									],
									[
										19896,
										19899
									],
									[
										19934,
										19937
									],
									[
										19968,
										19971
									],
									[
										20310,
										20313
									],
									[
										20397,
										20400
									],
									[
										20488,
										20491
									],
									[
										20650,
										20653
									],
									[
										20819,
										20822
									],
									[
										20988,
										20991
									],
									[
										21165,
										21168
									],
									[
										21359,
										21362
									],
									[
										21523,
										21526
									],
									[
										21662,
										21665
									],
									[
										21676,
										21679
									],
									[
										21699,
										21702
									],
									[
										21823,
										21826
									],
									[
										21837,
										21840
									],
									[
										21860,
										21863
									],
									[
										21985,
										21988
									],
									[
										21999,
										22002
									],
									[
										22022,
										22025
									],
									[
										22153,
										22156
									],
									[
										22167,
										22170
									],
									[
										22189,
										22192
									],
									[
										22319,
										22322
									],
									[
										22333,
										22336
									],
									[
										22355,
										22358
									],
									[
										22755,
										22758
									],
									[
										22866,
										22869
									],
									[
										23025,
										23028
									],
									[
										23179,
										23182
									],
									[
										23345,
										23348
									],
									[
										23459,
										23462
									],
									[
										23480,
										23483
									],
									[
										23543,
										23546
									],
									[
										23654,
										23657
									],
									[
										23813,
										23816
									],
									[
										23967,
										23970
									],
									[
										24133,
										24136
									],
									[
										24247,
										24250
									],
									[
										24268,
										24271
									],
									[
										24331,
										24334
									],
									[
										24442,
										24445
									],
									[
										24601,
										24604
									],
									[
										24755,
										24758
									],
									[
										24921,
										24924
									],
									[
										25036,
										25039
									],
									[
										25057,
										25060
									],
									[
										25120,
										25123
									],
									[
										25231,
										25234
									],
									[
										25390,
										25393
									],
									[
										25544,
										25547
									],
									[
										25710,
										25713
									],
									[
										25825,
										25828
									],
									[
										25846,
										25849
									],
									[
										25909,
										25912
									],
									[
										26018,
										26021
									],
									[
										26175,
										26178
									],
									[
										26327,
										26330
									],
									[
										26491,
										26494
									],
									[
										26606,
										26609
									],
									[
										26626,
										26629
									],
									[
										26688,
										26691
									],
									[
										26797,
										26800
									],
									[
										26954,
										26957
									],
									[
										27106,
										27109
									],
									[
										27270,
										27273
									],
									[
										27385,
										27388
									],
									[
										27405,
										27408
									],
									[
										27467,
										27470
									],
									[
										27576,
										27579
									],
									[
										27733,
										27736
									],
									[
										27885,
										27888
									],
									[
										28049,
										28052
									],
									[
										28164,
										28167
									],
									[
										28184,
										28187
									],
									[
										28246,
										28249
									],
									[
										28357,
										28360
									],
									[
										28516,
										28519
									],
									[
										28670,
										28673
									],
									[
										28836,
										28839
									],
									[
										28950,
										28953
									],
									[
										28971,
										28974
									],
									[
										29034,
										29037
									],
									[
										29145,
										29148
									],
									[
										29304,
										29307
									],
									[
										29458,
										29461
									],
									[
										29624,
										29627
									],
									[
										29739,
										29742
									],
									[
										29760,
										29763
									],
									[
										29823,
										29826
									],
									[
										29934,
										29937
									],
									[
										30093,
										30096
									],
									[
										30247,
										30250
									],
									[
										30413,
										30416
									],
									[
										30567,
										30570
									],
									[
										30687,
										30690
									],
									[
										30708,
										30711
									],
									[
										30771,
										30774
									],
									[
										30882,
										30885
									],
									[
										31041,
										31044
									],
									[
										31195,
										31198
									],
									[
										31361,
										31364
									],
									[
										31476,
										31479
									],
									[
										31497,
										31500
									],
									[
										31560,
										31563
									],
									[
										31671,
										31674
									],
									[
										31830,
										31833
									],
									[
										31984,
										31987
									],
									[
										32150,
										32153
									],
									[
										32264,
										32267
									],
									[
										32285,
										32288
									],
									[
										32529,
										32532
									],
									[
										32603,
										32606
									],
									[
										32677,
										32680
									],
									[
										32750,
										32753
									],
									[
										32831,
										32834
									],
									[
										33360,
										33363
									],
									[
										33707,
										33710
									],
									[
										34060,
										34063
									],
									[
										34220,
										34223
									],
									[
										34249,
										34252
									],
									[
										34321,
										34324
									],
									[
										34482,
										34485
									],
									[
										34693,
										34696
									],
									[
										35124,
										35127
									],
									[
										35243,
										35246
									],
									[
										35394,
										35397
									],
									[
										35414,
										35417
									],
									[
										35527,
										35530
									],
									[
										35572,
										35575
									],
									[
										35635,
										35638
									],
									[
										35696,
										35699
									],
									[
										35767,
										35770
									],
									[
										35790,
										35793
									],
									[
										35857,
										35860
									],
									[
										35882,
										35885
									],
									[
										35959,
										35962
									],
									[
										35984,
										35987
									],
									[
										36100,
										36103
									],
									[
										36145,
										36148
									],
									[
										36215,
										36218
									],
									[
										36276,
										36279
									],
									[
										36349,
										36352
									],
									[
										36372,
										36375
									],
									[
										36439,
										36442
									],
									[
										36464,
										36467
									],
									[
										36541,
										36544
									],
									[
										36566,
										36569
									],
									[
										36699,
										36702
									],
									[
										36769,
										36772
									],
									[
										36830,
										36833
									],
									[
										36903,
										36906
									],
									[
										36927,
										36930
									],
									[
										36995,
										36998
									],
									[
										37022,
										37025
									],
									[
										37149,
										37152
									],
									[
										37219,
										37222
									],
									[
										37280,
										37283
									],
									[
										37353,
										37356
									],
									[
										37379,
										37382
									],
									[
										37449,
										37452
									],
									[
										37477,
										37480
									],
									[
										37607,
										37610
									],
									[
										37677,
										37680
									],
									[
										37738,
										37741
									],
									[
										37811,
										37814
									],
									[
										37835,
										37838
									],
									[
										37903,
										37906
									],
									[
										37930,
										37933
									],
									[
										38064,
										38067
									],
									[
										38134,
										38137
									],
									[
										38195,
										38198
									],
									[
										38268,
										38271
									],
									[
										38295,
										38298
									],
									[
										38366,
										38369
									],
									[
										38394,
										38397
									],
									[
										38562,
										38565
									],
									[
										38632,
										38635
									],
									[
										38693,
										38696
									],
									[
										38766,
										38769
									],
									[
										38790,
										38793
									],
									[
										38858,
										38861
									],
									[
										38885,
										38888
									],
									[
										39008,
										39011
									],
									[
										39078,
										39081
									],
									[
										39139,
										39142
									],
									[
										39212,
										39215
									],
									[
										39236,
										39239
									],
									[
										39304,
										39307
									],
									[
										39331,
										39334
									],
									[
										39455,
										39458
									],
									[
										39525,
										39528
									],
									[
										39586,
										39589
									],
									[
										39659,
										39662
									],
									[
										39683,
										39686
									],
									[
										39751,
										39754
									],
									[
										39778,
										39781
									],
									[
										39925,
										39928
									],
									[
										39995,
										39998
									],
									[
										40056,
										40059
									],
									[
										40129,
										40132
									],
									[
										40159,
										40162
									],
									[
										40233,
										40236
									],
									[
										40263,
										40266
									],
									[
										40412,
										40415
									],
									[
										40482,
										40485
									],
									[
										40543,
										40546
									],
									[
										40616,
										40619
									],
									[
										40646,
										40649
									],
									[
										40720,
										40723
									],
									[
										40750,
										40753
									],
									[
										40900,
										40903
									],
									[
										40970,
										40973
									],
									[
										41031,
										41034
									],
									[
										41104,
										41107
									],
									[
										41134,
										41137
									],
									[
										41208,
										41211
									],
									[
										41238,
										41241
									],
									[
										41351,
										41354
									],
									[
										41400,
										41403
									],
									[
										41467,
										41470
									],
									[
										41503,
										41506
									],
									[
										41580,
										41583
									],
									[
										41616,
										41619
									],
									[
										41659,
										41662
									],
									[
										41671,
										41674
									],
									[
										41714,
										41717
									],
									[
										41763,
										41766
									],
									[
										41806,
										41809
									],
									[
										41850,
										41853
									],
									[
										41898,
										41901
									],
									[
										41941,
										41944
									],
									[
										42007,
										42010
									],
									[
										42153,
										42156
									],
									[
										42222,
										42225
									],
									[
										42260,
										42263
									],
									[
										42378,
										42381
									],
									[
										42413,
										42416
									],
									[
										42451,
										42454
									],
									[
										42500,
										42503
									],
									[
										42564,
										42567
									],
									[
										42847,
										42850
									],
									[
										42920,
										42923
									],
									[
										42945,
										42948
									],
									[
										42981,
										42984
									],
									[
										43045,
										43048
									],
									[
										43193,
										43196
									],
									[
										43266,
										43269
									],
									[
										43290,
										43293
									],
									[
										43325,
										43328
									],
									[
										43389,
										43392
									],
									[
										43655,
										43658
									],
									[
										43728,
										43731
									],
									[
										43752,
										43755
									],
									[
										43787,
										43790
									],
									[
										43852,
										43855
									],
									[
										44068,
										44071
									],
									[
										44141,
										44144
									],
									[
										44164,
										44167
									],
									[
										44198,
										44201
									],
									[
										44265,
										44268
									],
									[
										44425,
										44428
									],
									[
										44498,
										44501
									],
									[
										44526,
										44529
									],
									[
										44598,
										44601
									],
									[
										44626,
										44629
									],
									[
										44793,
										44796
									],
									[
										44842,
										44845
									],
									[
										44891,
										44894
									],
									[
										44940,
										44943
									],
									[
										44989,
										44992
									],
									[
										45038,
										45041
									],
									[
										45087,
										45090
									],
									[
										45136,
										45139
									],
									[
										45185,
										45188
									],
									[
										45234,
										45237
									],
									[
										45283,
										45286
									],
									[
										45332,
										45335
									],
									[
										45381,
										45384
									],
									[
										45430,
										45433
									],
									[
										45479,
										45482
									],
									[
										45528,
										45531
									],
									[
										45577,
										45580
									],
									[
										45626,
										45629
									],
									[
										45675,
										45678
									],
									[
										45724,
										45727
									],
									[
										45773,
										45776
									],
									[
										45822,
										45825
									],
									[
										45871,
										45874
									],
									[
										45920,
										45923
									],
									[
										45969,
										45972
									],
									[
										46018,
										46021
									],
									[
										46067,
										46070
									],
									[
										46116,
										46119
									],
									[
										46165,
										46168
									],
									[
										46214,
										46217
									],
									[
										46449,
										46452
									],
									[
										47097,
										47100
									],
									[
										47623,
										47626
									],
									[
										47728,
										47731
									],
									[
										47792,
										47795
									],
									[
										47853,
										47856
									],
									[
										47926,
										47929
									],
									[
										47967,
										47970
									],
									[
										48265,
										48268
									],
									[
										48301,
										48304
									],
									[
										48337,
										48340
									],
									[
										48529,
										48532
									],
									[
										48565,
										48568
									],
									[
										48601,
										48604
									],
									[
										48794,
										48797
									],
									[
										48830,
										48833
									],
									[
										48866,
										48869
									],
									[
										49059,
										49062
									],
									[
										49095,
										49098
									],
									[
										49131,
										49134
									],
									[
										49324,
										49327
									],
									[
										49360,
										49363
									],
									[
										49396,
										49399
									],
									[
										49590,
										49593
									],
									[
										49626,
										49629
									],
									[
										49662,
										49665
									],
									[
										49852,
										49855
									],
									[
										49888,
										49891
									],
									[
										49924,
										49927
									],
									[
										50114,
										50117
									],
									[
										50150,
										50153
									],
									[
										50186,
										50189
									],
									[
										50376,
										50379
									],
									[
										50412,
										50415
									],
									[
										50448,
										50451
									],
									[
										50638,
										50641
									],
									[
										50674,
										50677
									],
									[
										50710,
										50713
									],
									[
										50900,
										50903
									],
									[
										50936,
										50939
									],
									[
										50972,
										50975
									],
									[
										51162,
										51165
									],
									[
										51198,
										51201
									],
									[
										51234,
										51237
									],
									[
										51424,
										51427
									],
									[
										51460,
										51463
									],
									[
										51496,
										51499
									],
									[
										51686,
										51689
									],
									[
										51722,
										51725
									],
									[
										51758,
										51761
									],
									[
										51953,
										51956
									],
									[
										52159,
										52162
									],
									[
										52364,
										52367
									],
									[
										52570,
										52573
									],
									[
										52770,
										52773
									],
									[
										52967,
										52970
									],
									[
										53167,
										53170
									],
									[
										53365,
										53368
									],
									[
										53570,
										53573
									],
									[
										53774,
										53777
									],
									[
										53973,
										53976
									],
									[
										54171,
										54174
									],
									[
										54369,
										54372
									],
									[
										54568,
										54571
									],
									[
										54767,
										54770
									],
									[
										54965,
										54968
									],
									[
										55163,
										55166
									],
									[
										55362,
										55365
									],
									[
										55561,
										55564
									],
									[
										55760,
										55763
									],
									[
										55962,
										55965
									],
									[
										56165,
										56168
									],
									[
										56370,
										56373
									],
									[
										56577,
										56580
									],
									[
										56808,
										56811
									],
									[
										56861,
										56864
									],
									[
										57246,
										57249
									],
									[
										57310,
										57313
									],
									[
										57345,
										57348
									],
									[
										57371,
										57374
									],
									[
										57488,
										57491
									],
									[
										57561,
										57564
									],
									[
										57599,
										57602
									],
									[
										57946,
										57949
									],
									[
										58016,
										58019
									],
									[
										58052,
										58055
									],
									[
										58080,
										58083
									],
									[
										58204,
										58207
									],
									[
										58277,
										58280
									],
									[
										58318,
										58321
									],
									[
										58573,
										58576
									],
									[
										58637,
										58640
									],
									[
										58675,
										58678
									],
									[
										58689,
										58692
									],
									[
										58736,
										58739
									],
									[
										58775,
										58778
									],
									[
										58833,
										58836
									],
									[
										58906,
										58909
									],
									[
										58947,
										58950
									],
									[
										59305,
										59308
									],
									[
										59375,
										59378
									],
									[
										59414,
										59417
									],
									[
										59430,
										59433
									],
									[
										59479,
										59482
									],
									[
										59520,
										59523
									],
									[
										59580,
										59583
									],
									[
										59653,
										59656
									],
									[
										59696,
										59699
									],
									[
										59788,
										59791
									],
									[
										59813,
										59816
									],
									[
										59869,
										59872
									],
									[
										59879,
										59882
									],
									[
										59939,
										59942
									],
									[
										59949,
										59952
									],
									[
										60000,
										60003
									],
									[
										60010,
										60013
									],
									[
										60073,
										60076
									],
									[
										60083,
										60086
									],
									[
										60108,
										60111
									],
									[
										60118,
										60121
									],
									[
										60307,
										60310
									],
									[
										60534,
										60537
									],
									[
										60761,
										60764
									],
									[
										60988,
										60991
									],
									[
										61216,
										61219
									],
									[
										61444,
										61447
									],
									[
										61672,
										61675
									],
									[
										61900,
										61903
									],
									[
										62224,
										62227
									],
									[
										62292,
										62295
									],
									[
										62538,
										62541
									],
									[
										62606,
										62609
									],
									[
										62789,
										62792
									],
									[
										62851,
										62854
									],
									[
										63131,
										63134
									],
									[
										63147,
										63150
									],
									[
										63165,
										63168
									],
									[
										63492,
										63495
									],
									[
										63516,
										63519
									],
									[
										63585,
										63588
									],
									[
										63649,
										63652
									],
									[
										63677,
										63680
									],
									[
										63750,
										63753
									],
									[
										63988,
										63991
									],
									[
										64346,
										64349
									],
									[
										64783,
										64786
									],
									[
										64834,
										64837
									],
									[
										65210,
										65213
									],
									[
										65365,
										65368
									],
									[
										65619,
										65622
									],
									[
										65696,
										65699
									],
									[
										65714,
										65717
									],
									[
										65825,
										65828
									],
									[
										65859,
										65862
									],
									[
										65908,
										65911
									],
									[
										65980,
										65983
									],
									[
										65995,
										65998
									],
									[
										66247,
										66250
									],
									[
										66310,
										66313
									],
									[
										66355,
										66358
									],
									[
										66408,
										66411
									],
									[
										66449,
										66452
									],
									[
										66463,
										66466
									],
									[
										66642,
										66645
									],
									[
										66692,
										66695
									],
									[
										66737,
										66740
									],
									[
										66849,
										66852
									],
									[
										66883,
										66886
									],
									[
										66926,
										66929
									],
									[
										66976,
										66979
									],
									[
										67067,
										67070
									],
									[
										67133,
										67136
									],
									[
										67234,
										67237
									],
									[
										67430,
										67433
									],
									[
										67482,
										67485
									],
									[
										67593,
										67596
									],
									[
										67645,
										67648
									],
									[
										67743,
										67746
									],
									[
										67782,
										67785
									],
									[
										67811,
										67814
									],
									[
										67851,
										67854
									],
									[
										67890,
										67893
									],
									[
										67944,
										67947
									],
									[
										67957,
										67960
									],
									[
										68009,
										68012
									],
									[
										68085,
										68088
									],
									[
										68148,
										68151
									],
									[
										68188,
										68191
									],
									[
										68348,
										68351
									],
									[
										68487,
										68490
									],
									[
										68527,
										68530
									],
									[
										68684,
										68687
									],
									[
										68770,
										68773
									],
									[
										68805,
										68808
									],
									[
										68867,
										68870
									],
									[
										68919,
										68922
									],
									[
										68960,
										68963
									],
									[
										68998,
										69001
									],
									[
										69039,
										69042
									],
									[
										69097,
										69100
									],
									[
										69124,
										69127
									],
									[
										69170,
										69173
									],
									[
										69376,
										69379
									],
									[
										69419,
										69422
									],
									[
										69460,
										69463
									],
									[
										69505,
										69508
									],
									[
										69551,
										69554
									],
									[
										69577,
										69580
									],
									[
										69665,
										69668
									],
									[
										69801,
										69804
									],
									[
										69992,
										69995
									],
									[
										70035,
										70038
									],
									[
										70076,
										70079
									],
									[
										70121,
										70124
									],
									[
										70167,
										70170
									],
									[
										70194,
										70197
									],
									[
										70282,
										70285
									],
									[
										70419,
										70422
									],
									[
										70624,
										70627
									],
									[
										70665,
										70668
									],
									[
										70706,
										70709
									],
									[
										70751,
										70754
									],
									[
										70797,
										70800
									],
									[
										70826,
										70829
									],
									[
										70914,
										70917
									],
									[
										71031,
										71034
									],
									[
										71192,
										71195
									],
									[
										71233,
										71236
									],
									[
										71273,
										71276
									],
									[
										71321,
										71324
									],
									[
										71366,
										71369
									],
									[
										71394,
										71397
									],
									[
										71508,
										71511
									],
									[
										71627,
										71630
									],
									[
										71803,
										71806
									],
									[
										71846,
										71849
									],
									[
										71885,
										71888
									],
									[
										71925,
										71928
									],
									[
										71971,
										71974
									],
									[
										71995,
										71998
									],
									[
										72082,
										72085
									],
									[
										72225,
										72228
									],
									[
										72426,
										72429
									],
									[
										72469,
										72472
									],
									[
										72508,
										72511
									],
									[
										72548,
										72551
									],
									[
										72594,
										72597
									],
									[
										72619,
										72622
									],
									[
										72706,
										72709
									],
									[
										72850,
										72853
									],
									[
										73062,
										73065
									],
									[
										73103,
										73106
									],
									[
										73144,
										73147
									],
									[
										73189,
										73192
									],
									[
										73235,
										73238
									],
									[
										73262,
										73265
									],
									[
										73349,
										73352
									],
									[
										73471,
										73474
									],
									[
										73616,
										73619
									],
									[
										73796,
										73799
									],
									[
										73824,
										73827
									],
									[
										73916,
										73919
									],
									[
										74022,
										74025
									],
									[
										74071,
										74074
									],
									[
										74159,
										74162
									],
									[
										74209,
										74212
									],
									[
										74249,
										74252
									],
									[
										74326,
										74329
									],
									[
										74401,
										74404
									],
									[
										74463,
										74466
									],
									[
										74705,
										74708
									],
									[
										74741,
										74744
									],
									[
										74781,
										74784
									],
									[
										74990,
										74993
									],
									[
										75049,
										75052
									],
									[
										75084,
										75087
									],
									[
										75119,
										75122
									],
									[
										75159,
										75162
									],
									[
										75326,
										75329
									],
									[
										75381,
										75384
									],
									[
										75423,
										75426
									],
									[
										75448,
										75451
									],
									[
										75525,
										75528
									],
									[
										75549,
										75552
									],
									[
										75623,
										75626
									],
									[
										75673,
										75676
									],
									[
										75732,
										75735
									],
									[
										75778,
										75781
									],
									[
										75930,
										75933
									],
									[
										76076,
										76079
									],
									[
										76134,
										76137
									],
									[
										76190,
										76193
									],
									[
										76232,
										76235
									],
									[
										76304,
										76307
									],
									[
										76373,
										76376
									],
									[
										76496,
										76499
									],
									[
										76583,
										76586
									],
									[
										76654,
										76657
									],
									[
										76682,
										76685
									],
									[
										76774,
										76777
									],
									[
										76862,
										76865
									],
									[
										76925,
										76928
									],
									[
										76971,
										76974
									],
									[
										77025,
										77028
									],
									[
										77066,
										77069
									],
									[
										77080,
										77083
									],
									[
										77163,
										77166
									],
									[
										77229,
										77232
									],
									[
										77330,
										77333
									],
									[
										77527,
										77530
									],
									[
										77579,
										77582
									],
									[
										77690,
										77693
									],
									[
										77742,
										77745
									],
									[
										77842,
										77845
									],
									[
										77881,
										77884
									],
									[
										77911,
										77914
									],
									[
										77952,
										77955
									],
									[
										77992,
										77995
									],
									[
										78046,
										78049
									],
									[
										78059,
										78062
									],
									[
										78111,
										78114
									],
									[
										78186,
										78189
									],
									[
										78295,
										78298
									],
									[
										78360,
										78363
									],
									[
										78399,
										78402
									],
									[
										78429,
										78432
									],
									[
										78470,
										78473
									],
									[
										78511,
										78514
									],
									[
										78706,
										78709
									],
									[
										78720,
										78723
									],
									[
										78876,
										78879
									],
									[
										78988,
										78991
									],
									[
										79030,
										79033
									],
									[
										79069,
										79072
									],
									[
										79099,
										79102
									],
									[
										79140,
										79143
									],
									[
										79174,
										79177
									],
									[
										79364,
										79367
									],
									[
										79377,
										79380
									],
									[
										79560,
										79563
									],
									[
										79618,
										79621
									],
									[
										79657,
										79660
									],
									[
										79685,
										79688
									],
									[
										79724,
										79727
									],
									[
										79783,
										79786
									],
									[
										79796,
										79799
									],
									[
										79967,
										79970
									],
									[
										80025,
										80028
									],
									[
										80064,
										80067
									],
									[
										80092,
										80095
									],
									[
										80131,
										80134
									],
									[
										80190,
										80193
									],
									[
										80205,
										80208
									],
									[
										80384,
										80387
									],
									[
										80427,
										80430
									],
									[
										80466,
										80469
									],
									[
										80494,
										80497
									],
									[
										80533,
										80536
									],
									[
										80592,
										80595
									],
									[
										80608,
										80611
									],
									[
										80784,
										80787
									],
									[
										80827,
										80830
									],
									[
										80866,
										80869
									],
									[
										80894,
										80897
									],
									[
										80952,
										80955
									],
									[
										80966,
										80969
									],
									[
										81097,
										81100
									],
									[
										81247,
										81250
									],
									[
										81286,
										81289
									],
									[
										81314,
										81317
									],
									[
										81353,
										81356
									],
									[
										81412,
										81415
									],
									[
										81431,
										81434
									],
									[
										81601,
										81604
									],
									[
										81633,
										81636
									],
									[
										81705,
										81708
									],
									[
										81744,
										81747
									],
									[
										81774,
										81777
									],
									[
										81816,
										81819
									],
									[
										81877,
										81880
									],
									[
										81898,
										81901
									],
									[
										82080,
										82083
									],
									[
										82112,
										82115
									],
									[
										82193,
										82196
									],
									[
										82232,
										82235
									],
									[
										82262,
										82265
									],
									[
										82310,
										82313
									],
									[
										82367,
										82370
									],
									[
										82387,
										82390
									],
									[
										82522,
										82525
									],
									[
										82557,
										82560
									],
									[
										82619,
										82622
									],
									[
										82671,
										82674
									],
									[
										82712,
										82715
									],
									[
										82750,
										82753
									],
									[
										82791,
										82794
									],
									[
										82849,
										82852
									],
									[
										82876,
										82879
									],
									[
										82922,
										82925
									],
									[
										83057,
										83060
									],
									[
										83098,
										83101
									],
									[
										83139,
										83142
									],
									[
										83184,
										83187
									],
									[
										83230,
										83233
									],
									[
										83256,
										83259
									],
									[
										83422,
										83425
									],
									[
										83463,
										83466
									],
									[
										83504,
										83507
									],
									[
										83549,
										83552
									],
									[
										83595,
										83598
									],
									[
										83622,
										83625
									],
									[
										83807,
										83810
									],
									[
										83850,
										83853
									],
									[
										83891,
										83894
									],
									[
										83936,
										83939
									],
									[
										83982,
										83985
									],
									[
										84011,
										84014
									],
									[
										84166,
										84169
									],
									[
										84207,
										84210
									],
									[
										84247,
										84250
									],
									[
										84295,
										84298
									],
									[
										84340,
										84343
									],
									[
										84368,
										84371
									],
									[
										84521,
										84524
									],
									[
										84562,
										84565
									],
									[
										84601,
										84604
									],
									[
										84641,
										84644
									],
									[
										84687,
										84690
									],
									[
										84711,
										84714
									],
									[
										84879,
										84882
									],
									[
										84920,
										84923
									],
									[
										84959,
										84962
									],
									[
										84999,
										85002
									],
									[
										85045,
										85048
									],
									[
										85070,
										85073
									],
									[
										85254,
										85257
									],
									[
										85295,
										85298
									],
									[
										85334,
										85337
									],
									[
										85374,
										85377
									],
									[
										85420,
										85423
									],
									[
										85447,
										85450
									],
									[
										85547,
										85550
									],
									[
										85638,
										85641
									],
									[
										85903,
										85906
									],
									[
										85965,
										85968
									],
									[
										86066,
										86069
									],
									[
										86164,
										86167
									],
									[
										86264,
										86267
									],
									[
										86357,
										86360
									],
									[
										86414,
										86417
									],
									[
										86495,
										86498
									],
									[
										86552,
										86555
									],
									[
										86647,
										86650
									],
									[
										86711,
										86714
									],
									[
										86791,
										86794
									],
									[
										86915,
										86918
									],
									[
										86949,
										86952
									],
									[
										86999,
										87002
									],
									[
										87120,
										87123
									],
									[
										87205,
										87208
									],
									[
										87267,
										87270
									],
									[
										87356,
										87359
									],
									[
										87421,
										87424
									],
									[
										87598,
										87601
									],
									[
										87858,
										87861
									],
									[
										88119,
										88122
									],
									[
										88287,
										88290
									],
									[
										88397,
										88400
									],
									[
										88539,
										88542
									],
									[
										88605,
										88608
									],
									[
										88852,
										88855
									],
									[
										89090,
										89093
									],
									[
										89311,
										89314
									],
									[
										89364,
										89367
									],
									[
										89416,
										89419
									],
									[
										89468,
										89471
									],
									[
										89521,
										89524
									],
									[
										89574,
										89577
									],
									[
										89626,
										89629
									],
									[
										89679,
										89682
									],
									[
										90014,
										90017
									],
									[
										90055,
										90058
									],
									[
										90417,
										90420
									],
									[
										90458,
										90461
									],
									[
										90712,
										90715
									],
									[
										90795,
										90798
									],
									[
										90851,
										90854
									],
									[
										91058,
										91061
									],
									[
										91145,
										91148
									],
									[
										91203,
										91206
									],
									[
										91555,
										91558
									],
									[
										91772,
										91775
									],
									[
										92075,
										92078
									],
									[
										92292,
										92295
									],
									[
										92644,
										92647
									],
									[
										92864,
										92867
									],
									[
										93169,
										93172
									],
									[
										93389,
										93392
									],
									[
										93776,
										93779
									],
									[
										93822,
										93825
									],
									[
										94112,
										94115
									],
									[
										94191,
										94194
									],
									[
										94270,
										94273
									],
									[
										94349,
										94352
									],
									[
										94428,
										94431
									],
									[
										94507,
										94510
									],
									[
										94594,
										94597
									],
									[
										94673,
										94676
									],
									[
										94752,
										94755
									],
									[
										94831,
										94834
									],
									[
										94912,
										94915
									],
									[
										94993,
										94996
									],
									[
										95074,
										95077
									],
									[
										95155,
										95158
									],
									[
										95236,
										95239
									],
									[
										95317,
										95320
									],
									[
										95398,
										95401
									],
									[
										95479,
										95482
									],
									[
										95560,
										95563
									],
									[
										95641,
										95644
									],
									[
										95722,
										95725
									],
									[
										95803,
										95806
									],
									[
										95884,
										95887
									],
									[
										95965,
										95968
									],
									[
										96046,
										96049
									],
									[
										96127,
										96130
									],
									[
										96208,
										96211
									],
									[
										96289,
										96292
									],
									[
										96370,
										96373
									],
									[
										96451,
										96454
									],
									[
										96742,
										96745
									],
									[
										96918,
										96921
									],
									[
										96932,
										96935
									],
									[
										96957,
										96960
									],
									[
										96970,
										96973
									],
									[
										96987,
										96990
									],
									[
										97007,
										97010
									],
									[
										97047,
										97050
									],
									[
										97060,
										97063
									],
									[
										97077,
										97080
									],
									[
										97097,
										97100
									],
									[
										97137,
										97140
									],
									[
										97150,
										97153
									],
									[
										97167,
										97170
									],
									[
										97187,
										97190
									],
									[
										97227,
										97230
									],
									[
										97240,
										97243
									],
									[
										97256,
										97259
									],
									[
										97276,
										97279
									],
									[
										97316,
										97319
									],
									[
										97329,
										97332
									],
									[
										97345,
										97348
									],
									[
										97365,
										97368
									],
									[
										97410,
										97413
									],
									[
										97423,
										97426
									],
									[
										97439,
										97442
									],
									[
										97459,
										97462
									],
									[
										97505,
										97508
									],
									[
										97518,
										97521
									],
									[
										97534,
										97537
									],
									[
										97554,
										97557
									],
									[
										97600,
										97603
									],
									[
										97613,
										97616
									],
									[
										97629,
										97632
									],
									[
										97649,
										97652
									],
									[
										97695,
										97698
									],
									[
										97708,
										97711
									],
									[
										97724,
										97727
									],
									[
										97744,
										97747
									],
									[
										97858,
										97861
									],
									[
										97873,
										97876
									],
									[
										97963,
										97966
									],
									[
										97978,
										97981
									],
									[
										98068,
										98071
									],
									[
										98083,
										98086
									],
									[
										98173,
										98176
									],
									[
										98188,
										98191
									],
									[
										98284,
										98287
									],
									[
										98299,
										98302
									],
									[
										98423,
										98426
									],
									[
										98436,
										98439
									],
									[
										98472,
										98475
									],
									[
										98485,
										98488
									],
									[
										98521,
										98524
									],
									[
										98534,
										98537
									],
									[
										98570,
										98573
									],
									[
										98583,
										98586
									],
									[
										98618,
										98621
									],
									[
										98631,
										98634
									],
									[
										98663,
										98666
									],
									[
										98676,
										98679
									],
									[
										98717,
										98720
									],
									[
										98730,
										98733
									],
									[
										98771,
										98774
									],
									[
										98784,
										98787
									],
									[
										98825,
										98828
									],
									[
										98838,
										98841
									],
									[
										99158,
										99161
									],
									[
										99383,
										99386
									],
									[
										99760,
										99763
									],
									[
										100159,
										100162
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								99159,
								99159
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 10,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 32565.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "capt_basic/drivers/fsl_iocon.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4578,
						"regions":
						{
						},
						"selection":
						[
							[
								3963,
								3963
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1178.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "capt_basic/device/LPC804.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 360896,
						"regions":
						{
						},
						"selection":
						[
							[
								149490,
								149490
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 35746.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "capt_basic/drivers/fsl_swm.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3823,
						"regions":
						{
						},
						"selection":
						[
							[
								1561,
								1561
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 353.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
